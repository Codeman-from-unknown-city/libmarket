/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FinanceGetRealizationReportRequest from '../model/FinanceGetRealizationReportRequest';
import FinanceGetRealizationReportResponse from '../model/FinanceGetRealizationReportResponse';
import Financev3FinanceTransactionListV3Request from '../model/Financev3FinanceTransactionListV3Request';
import Financev3FinanceTransactionListV3Response from '../model/Financev3FinanceTransactionListV3Response';
import Financev3FinanceTransactionTotalsV3Request from '../model/Financev3FinanceTransactionTotalsV3Request';
import Financev3FinanceTransactionTotalsV3Response from '../model/Financev3FinanceTransactionTotalsV3Response';
import RpcStatus from '../model/RpcStatus';

/**
* FinanceAPI service.
* @module api/FinanceAPIApi
* @version 2.1
*/
export default class FinanceAPIApi {

    /**
    * Constructs a new FinanceAPIApi. 
    * @alias module:api/FinanceAPIApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the financeAPIFinanceTransactionListV3 operation.
     * @callback module:api/FinanceAPIApi~financeAPIFinanceTransactionListV3Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Financev3FinanceTransactionListV3Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Список транзакций (версия 3)
     * Возвращает подробную информацию по всем начислениям. Максимальный период, за который можно получить информацию в одном запросе — 3 месяца.  Если в запросе не указывать `posting_number`, то в ответе будут все отправления за указанный период или отправления определённого типа. 
     * @param {String} clientId Идентификатор клиента.
     * @param {String} apiKey API-ключ.
     * @param {module:model/Financev3FinanceTransactionListV3Request} financev3FinanceTransactionListV3Request 
     * @param {module:api/FinanceAPIApi~financeAPIFinanceTransactionListV3Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Financev3FinanceTransactionListV3Response}
     */
    financeAPIFinanceTransactionListV3(clientId, apiKey, financev3FinanceTransactionListV3Request, callback) {
      let postBody = financev3FinanceTransactionListV3Request;
      // verify the required parameter 'clientId' is set
      if (clientId === undefined || clientId === null) {
        throw new Error("Missing the required parameter 'clientId' when calling financeAPIFinanceTransactionListV3");
      }
      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling financeAPIFinanceTransactionListV3");
      }
      // verify the required parameter 'financev3FinanceTransactionListV3Request' is set
      if (financev3FinanceTransactionListV3Request === undefined || financev3FinanceTransactionListV3Request === null) {
        throw new Error("Missing the required parameter 'financev3FinanceTransactionListV3Request' when calling financeAPIFinanceTransactionListV3");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Client-Id': clientId,
        'Api-Key': apiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Financev3FinanceTransactionListV3Response;
      return this.apiClient.callApi(
        '/v3/finance/transaction/list', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the financeAPIFinanceTransactionTotalV3 operation.
     * @callback module:api/FinanceAPIApi~financeAPIFinanceTransactionTotalV3Callback
     * @param {String} error Error message, if any.
     * @param {module:model/Financev3FinanceTransactionTotalsV3Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Суммы транзакций
     * Возвращает итоговые суммы по транзакциям за указанный период.
     * @param {String} clientId Идентификатор клиента.
     * @param {String} apiKey API-ключ.
     * @param {module:model/Financev3FinanceTransactionTotalsV3Request} financev3FinanceTransactionTotalsV3Request 
     * @param {module:api/FinanceAPIApi~financeAPIFinanceTransactionTotalV3Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Financev3FinanceTransactionTotalsV3Response}
     */
    financeAPIFinanceTransactionTotalV3(clientId, apiKey, financev3FinanceTransactionTotalsV3Request, callback) {
      let postBody = financev3FinanceTransactionTotalsV3Request;
      // verify the required parameter 'clientId' is set
      if (clientId === undefined || clientId === null) {
        throw new Error("Missing the required parameter 'clientId' when calling financeAPIFinanceTransactionTotalV3");
      }
      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling financeAPIFinanceTransactionTotalV3");
      }
      // verify the required parameter 'financev3FinanceTransactionTotalsV3Request' is set
      if (financev3FinanceTransactionTotalsV3Request === undefined || financev3FinanceTransactionTotalsV3Request === null) {
        throw new Error("Missing the required parameter 'financev3FinanceTransactionTotalsV3Request' when calling financeAPIFinanceTransactionTotalV3");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Client-Id': clientId,
        'Api-Key': apiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Financev3FinanceTransactionTotalsV3Response;
      return this.apiClient.callApi(
        '/v3/finance/transaction/totals', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the financeAPIGetRealizationReport operation.
     * @callback module:api/FinanceAPIApi~financeAPIGetRealizationReportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FinanceGetRealizationReportResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Отчёт о реализации товаров
     * Отчёт о реализации доставленных и возвращённых товаров за месяц. Отмены и невыкупы не включаются.  Отчёт придёт не позднее 5-го числа следующего месяца.  [Подробнее об отчёте в Базе знаний продавца](https://seller-edu.ozon.ru/docs/finances-documents/calculations-documents/otchet-o-realizacii-tovarov.html) 
     * @param {String} clientId Идентификатор клиента.
     * @param {String} apiKey API-ключ.
     * @param {module:model/FinanceGetRealizationReportRequest} financeGetRealizationReportRequest 
     * @param {module:api/FinanceAPIApi~financeAPIGetRealizationReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FinanceGetRealizationReportResponse}
     */
    financeAPIGetRealizationReport(clientId, apiKey, financeGetRealizationReportRequest, callback) {
      let postBody = financeGetRealizationReportRequest;
      // verify the required parameter 'clientId' is set
      if (clientId === undefined || clientId === null) {
        throw new Error("Missing the required parameter 'clientId' when calling financeAPIGetRealizationReport");
      }
      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling financeAPIGetRealizationReport");
      }
      // verify the required parameter 'financeGetRealizationReportRequest' is set
      if (financeGetRealizationReportRequest === undefined || financeGetRealizationReportRequest === null) {
        throw new Error("Missing the required parameter 'financeGetRealizationReportRequest' when calling financeAPIGetRealizationReport");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Client-Id': clientId,
        'Api-Key': apiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = FinanceGetRealizationReportResponse;
      return this.apiClient.callApi(
        '/v1/finance/realization', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
