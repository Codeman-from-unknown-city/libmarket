/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Productv1ProductImportPicturesRequest model module.
 * @module model/Productv1ProductImportPicturesRequest
 * @version 2.1
 */
class Productv1ProductImportPicturesRequest {
    /**
     * Constructs a new <code>Productv1ProductImportPicturesRequest</code>.
     * @alias module:model/Productv1ProductImportPicturesRequest
     */
    constructor() { 
        
        Productv1ProductImportPicturesRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Productv1ProductImportPicturesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Productv1ProductImportPicturesRequest} obj Optional instance to populate.
     * @return {module:model/Productv1ProductImportPicturesRequest} The populated <code>Productv1ProductImportPicturesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Productv1ProductImportPicturesRequest();

            if (data.hasOwnProperty('color_image')) {
                obj['color_image'] = ApiClient.convertToType(data['color_image'], 'String');
            }
            if (data.hasOwnProperty('images')) {
                obj['images'] = ApiClient.convertToType(data['images'], ['String']);
            }
            if (data.hasOwnProperty('images360')) {
                obj['images360'] = ApiClient.convertToType(data['images360'], ['String']);
            }
            if (data.hasOwnProperty('product_id')) {
                obj['product_id'] = ApiClient.convertToType(data['product_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Productv1ProductImportPicturesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Productv1ProductImportPicturesRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['color_image'] && !(typeof data['color_image'] === 'string' || data['color_image'] instanceof String)) {
            throw new Error("Expected the field `color_image` to be a primitive type in the JSON string but got " + data['color_image']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['images'])) {
            throw new Error("Expected the field `images` to be an array in the JSON data but got " + data['images']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['images360'])) {
            throw new Error("Expected the field `images360` to be an array in the JSON data but got " + data['images360']);
        }

        return true;
    }


}



/**
 * Маркетинговый цвет.
 * @member {String} color_image
 */
Productv1ProductImportPicturesRequest.prototype['color_image'] = undefined;

/**
 * Массив ссылок на изображения.  Изображения в массиве расположены в порядке их расположения на сайте.  Первое изображение в массиве будет главным. 
 * @member {Array.<String>} images
 */
Productv1ProductImportPicturesRequest.prototype['images'] = undefined;

/**
 * Массив изображений 360. До 70 штук.  Формат: адрес ссылки на изображение в общедоступном облачном хранилище. Формат изображения по ссылке — JPG. 
 * @member {Array.<String>} images360
 */
Productv1ProductImportPicturesRequest.prototype['images360'] = undefined;

/**
 * Идентификатор товара.
 * @member {Number} product_id
 */
Productv1ProductImportPicturesRequest.prototype['product_id'] = undefined;






export default Productv1ProductImportPicturesRequest;

