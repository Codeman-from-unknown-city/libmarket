/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Productsv1GetProductInfoStocksByWarehouseFbsResponseResult model module.
 * @module model/Productsv1GetProductInfoStocksByWarehouseFbsResponseResult
 * @version 2.1
 */
class Productsv1GetProductInfoStocksByWarehouseFbsResponseResult {
    /**
     * Constructs a new <code>Productsv1GetProductInfoStocksByWarehouseFbsResponseResult</code>.
     * @alias module:model/Productsv1GetProductInfoStocksByWarehouseFbsResponseResult
     */
    constructor() { 
        
        Productsv1GetProductInfoStocksByWarehouseFbsResponseResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Productsv1GetProductInfoStocksByWarehouseFbsResponseResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Productsv1GetProductInfoStocksByWarehouseFbsResponseResult} obj Optional instance to populate.
     * @return {module:model/Productsv1GetProductInfoStocksByWarehouseFbsResponseResult} The populated <code>Productsv1GetProductInfoStocksByWarehouseFbsResponseResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Productsv1GetProductInfoStocksByWarehouseFbsResponseResult();

            if (data.hasOwnProperty('fbs_sku')) {
                obj['fbs_sku'] = ApiClient.convertToType(data['fbs_sku'], 'Number');
            }
            if (data.hasOwnProperty('present')) {
                obj['present'] = ApiClient.convertToType(data['present'], 'Number');
            }
            if (data.hasOwnProperty('product_id')) {
                obj['product_id'] = ApiClient.convertToType(data['product_id'], 'Number');
            }
            if (data.hasOwnProperty('reserved')) {
                obj['reserved'] = ApiClient.convertToType(data['reserved'], 'Number');
            }
            if (data.hasOwnProperty('warehouse_id')) {
                obj['warehouse_id'] = ApiClient.convertToType(data['warehouse_id'], 'Number');
            }
            if (data.hasOwnProperty('warehouse_name')) {
                obj['warehouse_name'] = ApiClient.convertToType(data['warehouse_name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Productsv1GetProductInfoStocksByWarehouseFbsResponseResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Productsv1GetProductInfoStocksByWarehouseFbsResponseResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['warehouse_name'] && !(typeof data['warehouse_name'] === 'string' || data['warehouse_name'] instanceof String)) {
            throw new Error("Expected the field `warehouse_name` to be a primitive type in the JSON string but got " + data['warehouse_name']);
        }

        return true;
    }


}



/**
 * SKU товара, который продаётся со склада продавца (схемы FBS и rFBS).
 * @member {Number} fbs_sku
 */
Productsv1GetProductInfoStocksByWarehouseFbsResponseResult.prototype['fbs_sku'] = undefined;

/**
 * Общее количество товара на складе.
 * @member {Number} present
 */
Productsv1GetProductInfoStocksByWarehouseFbsResponseResult.prototype['present'] = undefined;

/**
 * Идентификатор товара в системе продавца.
 * @member {Number} product_id
 */
Productsv1GetProductInfoStocksByWarehouseFbsResponseResult.prototype['product_id'] = undefined;

/**
 * Количество зарезервированных товаров на складе.
 * @member {Number} reserved
 */
Productsv1GetProductInfoStocksByWarehouseFbsResponseResult.prototype['reserved'] = undefined;

/**
 * Идентификатор склада.
 * @member {Number} warehouse_id
 */
Productsv1GetProductInfoStocksByWarehouseFbsResponseResult.prototype['warehouse_id'] = undefined;

/**
 * Название склада.
 * @member {String} warehouse_name
 */
Productsv1GetProductInfoStocksByWarehouseFbsResponseResult.prototype['warehouse_name'] = undefined;






export default Productsv1GetProductInfoStocksByWarehouseFbsResponseResult;

