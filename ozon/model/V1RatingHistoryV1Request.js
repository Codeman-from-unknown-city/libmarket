/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The V1RatingHistoryV1Request model module.
 * @module model/V1RatingHistoryV1Request
 * @version 2.1
 */
class V1RatingHistoryV1Request {
    /**
     * Constructs a new <code>V1RatingHistoryV1Request</code>.
     * @alias module:model/V1RatingHistoryV1Request
     * @param ratings {Array.<String>} Фильтр по рейтингу.  Рейтинги, по которым нужно получить значение за период:  - `rating_on_time` — процент заказов, выполненных вовремя за последние 30 дней. - `rating_review_avg_score_total` — средняя оценка всех товаров. - `rating_price` — индекс цен: отношение стоимости ваших товаров к самой низкой цене на такой же товар на других площадках. - `rating_order_cancellation` — процент отмен FBS-отправлений по вашей вине за последние 7 дней. Текущий и предыдущий день не учитываются. - `rating_shipment_delay` — процент FBS-отправлений, которые за последние 7 дней не были переданы в доставку по вашей вине. Текущий и предыдущий день не учитываются. - `rating_ssl` — оценка работы по FBO. Учитывает `rating_on_time_supply_delivery`, `rating_on_time_supply_cancellation` и `rating_order_accuracy`. - `rating_on_time_supply_delivery` — процент поставок, которые вы привезли на склад в выбранный временной интервал за последние 60 дней. - `rating_order_accuracy` — процент поставок без излишков, недостач, пересорта и брака за последние 60 дней. - `rating_on_time_supply_cancellation` — процент заявок на поставку, которые завершились или были отменены без опоздания за последние 60 дней. - `rating_reaction_time` — время, в течение которого покупатели в среднем ждали ответа на своё первое сообщение в чате за последние 30 дней. - `rating_average_response_time` — время, в течение которого покупатели в среднем ждали вашего ответа за последние 30 дней. - `rating_replied_dialogs_ratio` — доля диалогов хотя бы с одним вашим ответом в течение 24 часов за последние 30 дней.  Если вы хотите получить информацию по начисленным штрафным баллам для рейтингов `rating_on_time` и `rating_review_avg_score_total`, передайте значения нужных рейтингов в этом параметре и `with_premium_scores=true`. 
     */
    constructor(ratings) { 
        
        V1RatingHistoryV1Request.initialize(this, ratings);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ratings) { 
        obj['ratings'] = ratings;
    }

    /**
     * Constructs a <code>V1RatingHistoryV1Request</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1RatingHistoryV1Request} obj Optional instance to populate.
     * @return {module:model/V1RatingHistoryV1Request} The populated <code>V1RatingHistoryV1Request</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1RatingHistoryV1Request();

            if (data.hasOwnProperty('date_from')) {
                obj['date_from'] = ApiClient.convertToType(data['date_from'], 'Date');
            }
            if (data.hasOwnProperty('date_to')) {
                obj['date_to'] = ApiClient.convertToType(data['date_to'], 'Date');
            }
            if (data.hasOwnProperty('ratings')) {
                obj['ratings'] = ApiClient.convertToType(data['ratings'], ['String']);
            }
            if (data.hasOwnProperty('with_premium_scores')) {
                obj['with_premium_scores'] = ApiClient.convertToType(data['with_premium_scores'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>V1RatingHistoryV1Request</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>V1RatingHistoryV1Request</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of V1RatingHistoryV1Request.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ratings'])) {
            throw new Error("Expected the field `ratings` to be an array in the JSON data but got " + data['ratings']);
        }

        return true;
    }


}

V1RatingHistoryV1Request.RequiredProperties = ["ratings"];

/**
 * Начало периода.
 * @member {Date} date_from
 */
V1RatingHistoryV1Request.prototype['date_from'] = undefined;

/**
 * Конец периода.
 * @member {Date} date_to
 */
V1RatingHistoryV1Request.prototype['date_to'] = undefined;

/**
 * Фильтр по рейтингу.  Рейтинги, по которым нужно получить значение за период:  - `rating_on_time` — процент заказов, выполненных вовремя за последние 30 дней. - `rating_review_avg_score_total` — средняя оценка всех товаров. - `rating_price` — индекс цен: отношение стоимости ваших товаров к самой низкой цене на такой же товар на других площадках. - `rating_order_cancellation` — процент отмен FBS-отправлений по вашей вине за последние 7 дней. Текущий и предыдущий день не учитываются. - `rating_shipment_delay` — процент FBS-отправлений, которые за последние 7 дней не были переданы в доставку по вашей вине. Текущий и предыдущий день не учитываются. - `rating_ssl` — оценка работы по FBO. Учитывает `rating_on_time_supply_delivery`, `rating_on_time_supply_cancellation` и `rating_order_accuracy`. - `rating_on_time_supply_delivery` — процент поставок, которые вы привезли на склад в выбранный временной интервал за последние 60 дней. - `rating_order_accuracy` — процент поставок без излишков, недостач, пересорта и брака за последние 60 дней. - `rating_on_time_supply_cancellation` — процент заявок на поставку, которые завершились или были отменены без опоздания за последние 60 дней. - `rating_reaction_time` — время, в течение которого покупатели в среднем ждали ответа на своё первое сообщение в чате за последние 30 дней. - `rating_average_response_time` — время, в течение которого покупатели в среднем ждали вашего ответа за последние 30 дней. - `rating_replied_dialogs_ratio` — доля диалогов хотя бы с одним вашим ответом в течение 24 часов за последние 30 дней.  Если вы хотите получить информацию по начисленным штрафным баллам для рейтингов `rating_on_time` и `rating_review_avg_score_total`, передайте значения нужных рейтингов в этом параметре и `with_premium_scores=true`. 
 * @member {Array.<String>} ratings
 */
V1RatingHistoryV1Request.prototype['ratings'] = undefined;

/**
 * Признак, что в ответе нужно вернуть информацию о штрафных баллах в Premium-программе.
 * @member {Boolean} with_premium_scores
 */
V1RatingHistoryV1Request.prototype['with_premium_scores'] = undefined;






export default V1RatingHistoryV1Request;

