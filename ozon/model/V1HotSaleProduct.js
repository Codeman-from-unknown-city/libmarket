/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The V1HotSaleProduct model module.
 * @module model/V1HotSaleProduct
 * @version 2.1
 */
class V1HotSaleProduct {
    /**
     * Constructs a new <code>V1HotSaleProduct</code>.
     * @alias module:model/V1HotSaleProduct
     */
    constructor() { 
        
        V1HotSaleProduct.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>V1HotSaleProduct</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1HotSaleProduct} obj Optional instance to populate.
     * @return {module:model/V1HotSaleProduct} The populated <code>V1HotSaleProduct</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1HotSaleProduct();

            if (data.hasOwnProperty('action_price')) {
                obj['action_price'] = ApiClient.convertToType(data['action_price'], 'Number');
            }
            if (data.hasOwnProperty('date_day_promo')) {
                obj['date_day_promo'] = ApiClient.convertToType(data['date_day_promo'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('is_active')) {
                obj['is_active'] = ApiClient.convertToType(data['is_active'], 'Boolean');
            }
            if (data.hasOwnProperty('max_action_price')) {
                obj['max_action_price'] = ApiClient.convertToType(data['max_action_price'], 'Number');
            }
            if (data.hasOwnProperty('min_stock')) {
                obj['min_stock'] = ApiClient.convertToType(data['min_stock'], 'Number');
            }
            if (data.hasOwnProperty('stock')) {
                obj['stock'] = ApiClient.convertToType(data['stock'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>V1HotSaleProduct</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>V1HotSaleProduct</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['date_day_promo'] && !(typeof data['date_day_promo'] === 'string' || data['date_day_promo'] instanceof String)) {
            throw new Error("Expected the field `date_day_promo` to be a primitive type in the JSON string but got " + data['date_day_promo']);
        }

        return true;
    }


}



/**
 * Цена товара по акции.
 * @member {Number} action_price
 */
V1HotSaleProduct.prototype['action_price'] = undefined;

/**
 * Дата участия товара в акции в формате `YYYY-MM-DD`.
 * @member {String} date_day_promo
 */
V1HotSaleProduct.prototype['date_day_promo'] = undefined;

/**
 * Идентификатор товара.
 * @member {Number} id
 */
V1HotSaleProduct.prototype['id'] = undefined;

/**
 * Признак участия товара в акции.
 * @member {Boolean} is_active
 */
V1HotSaleProduct.prototype['is_active'] = undefined;

/**
 * Максимально возможная цена товара по акции.
 * @member {Number} max_action_price
 */
V1HotSaleProduct.prototype['max_action_price'] = undefined;

/**
 * Минимальное число единиц товара в акции типа «Скидка на сток».
 * @member {Number} min_stock
 */
V1HotSaleProduct.prototype['min_stock'] = undefined;

/**
 * Число единиц товара в акции типа «Скидка на сток».
 * @member {Number} stock
 */
V1HotSaleProduct.prototype['stock'] = undefined;






export default V1HotSaleProduct;

