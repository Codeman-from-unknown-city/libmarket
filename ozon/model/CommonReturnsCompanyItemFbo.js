/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CommonReturnsCompanyItemFbo model module.
 * @module model/CommonReturnsCompanyItemFbo
 * @version 2.1
 */
class CommonReturnsCompanyItemFbo {
    /**
     * Constructs a new <code>CommonReturnsCompanyItemFbo</code>.
     * @alias module:model/CommonReturnsCompanyItemFbo
     */
    constructor() { 
        
        CommonReturnsCompanyItemFbo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CommonReturnsCompanyItemFbo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CommonReturnsCompanyItemFbo} obj Optional instance to populate.
     * @return {module:model/CommonReturnsCompanyItemFbo} The populated <code>CommonReturnsCompanyItemFbo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CommonReturnsCompanyItemFbo();

            if (data.hasOwnProperty('accepted_from_customer_moment')) {
                obj['accepted_from_customer_moment'] = ApiClient.convertToType(data['accepted_from_customer_moment'], 'Date');
            }
            if (data.hasOwnProperty('company_id')) {
                obj['company_id'] = ApiClient.convertToType(data['company_id'], 'Number');
            }
            if (data.hasOwnProperty('current_place_name')) {
                obj['current_place_name'] = ApiClient.convertToType(data['current_place_name'], 'String');
            }
            if (data.hasOwnProperty('dst_place_name')) {
                obj['dst_place_name'] = ApiClient.convertToType(data['dst_place_name'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('is_opened')) {
                obj['is_opened'] = ApiClient.convertToType(data['is_opened'], 'Boolean');
            }
            if (data.hasOwnProperty('posting_number')) {
                obj['posting_number'] = ApiClient.convertToType(data['posting_number'], 'String');
            }
            if (data.hasOwnProperty('return_reason_name')) {
                obj['return_reason_name'] = ApiClient.convertToType(data['return_reason_name'], 'String');
            }
            if (data.hasOwnProperty('returned_to_ozon_moment')) {
                obj['returned_to_ozon_moment'] = ApiClient.convertToType(data['returned_to_ozon_moment'], 'Date');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'Number');
            }
            if (data.hasOwnProperty('status_name')) {
                obj['status_name'] = ApiClient.convertToType(data['status_name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CommonReturnsCompanyItemFbo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CommonReturnsCompanyItemFbo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['current_place_name'] && !(typeof data['current_place_name'] === 'string' || data['current_place_name'] instanceof String)) {
            throw new Error("Expected the field `current_place_name` to be a primitive type in the JSON string but got " + data['current_place_name']);
        }
        // ensure the json data is a string
        if (data['dst_place_name'] && !(typeof data['dst_place_name'] === 'string' || data['dst_place_name'] instanceof String)) {
            throw new Error("Expected the field `dst_place_name` to be a primitive type in the JSON string but got " + data['dst_place_name']);
        }
        // ensure the json data is a string
        if (data['posting_number'] && !(typeof data['posting_number'] === 'string' || data['posting_number'] instanceof String)) {
            throw new Error("Expected the field `posting_number` to be a primitive type in the JSON string but got " + data['posting_number']);
        }
        // ensure the json data is a string
        if (data['return_reason_name'] && !(typeof data['return_reason_name'] === 'string' || data['return_reason_name'] instanceof String)) {
            throw new Error("Expected the field `return_reason_name` to be a primitive type in the JSON string but got " + data['return_reason_name']);
        }
        // ensure the json data is a string
        if (data['status_name'] && !(typeof data['status_name'] === 'string' || data['status_name'] instanceof String)) {
            throw new Error("Expected the field `status_name` to be a primitive type in the JSON string but got " + data['status_name']);
        }

        return true;
    }


}



/**
 * Время приёма возврата от поĸупателя.
 * @member {Date} accepted_from_customer_moment
 */
CommonReturnsCompanyItemFbo.prototype['accepted_from_customer_moment'] = undefined;

/**
 * Идентификатор продавца.
 * @member {Number} company_id
 */
CommonReturnsCompanyItemFbo.prototype['company_id'] = undefined;

/**
 * Текущее местонахождение возврата.
 * @member {String} current_place_name
 */
CommonReturnsCompanyItemFbo.prototype['current_place_name'] = undefined;

/**
 * Место назначения возврата.
 * @member {String} dst_place_name
 */
CommonReturnsCompanyItemFbo.prototype['dst_place_name'] = undefined;

/**
 * Идентификатор возврата.
 * @member {Number} id
 */
CommonReturnsCompanyItemFbo.prototype['id'] = undefined;

/**
 * Признак вскрытия упаковки. `true`, если упаковка вскрыта.
 * @member {Boolean} is_opened
 */
CommonReturnsCompanyItemFbo.prototype['is_opened'] = undefined;

/**
 * Номер отправления.
 * @member {String} posting_number
 */
CommonReturnsCompanyItemFbo.prototype['posting_number'] = undefined;

/**
 * Причина возврата.
 * @member {String} return_reason_name
 */
CommonReturnsCompanyItemFbo.prototype['return_reason_name'] = undefined;

/**
 * Время доставки возврата на склад Ozon.
 * @member {Date} returned_to_ozon_moment
 */
CommonReturnsCompanyItemFbo.prototype['returned_to_ozon_moment'] = undefined;

/**
 * Идентификатор товара на Ozon.
 * @member {Number} sku
 */
CommonReturnsCompanyItemFbo.prototype['sku'] = undefined;

/**
 * Статус возврата.
 * @member {String} status_name
 */
CommonReturnsCompanyItemFbo.prototype['status_name'] = undefined;






export default CommonReturnsCompanyItemFbo;

