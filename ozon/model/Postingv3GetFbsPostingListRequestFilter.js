/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Postingv3GetFbsPostingListRequestFilter model module.
 * @module model/Postingv3GetFbsPostingListRequestFilter
 * @version 2.1
 */
class Postingv3GetFbsPostingListRequestFilter {
    /**
     * Constructs a new <code>Postingv3GetFbsPostingListRequestFilter</code>.
     * Фильтр.
     * @alias module:model/Postingv3GetFbsPostingListRequestFilter
     */
    constructor() { 
        
        Postingv3GetFbsPostingListRequestFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Postingv3GetFbsPostingListRequestFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Postingv3GetFbsPostingListRequestFilter} obj Optional instance to populate.
     * @return {module:model/Postingv3GetFbsPostingListRequestFilter} The populated <code>Postingv3GetFbsPostingListRequestFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Postingv3GetFbsPostingListRequestFilter();

            if (data.hasOwnProperty('delivery_method_id')) {
                obj['delivery_method_id'] = ApiClient.convertToType(data['delivery_method_id'], ['Number']);
            }
            if (data.hasOwnProperty('order_id')) {
                obj['order_id'] = ApiClient.convertToType(data['order_id'], 'Number');
            }
            if (data.hasOwnProperty('provider_id')) {
                obj['provider_id'] = ApiClient.convertToType(data['provider_id'], ['Number']);
            }
            if (data.hasOwnProperty('since')) {
                obj['since'] = ApiClient.convertToType(data['since'], 'Date');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('warehouse_id')) {
                obj['warehouse_id'] = ApiClient.convertToType(data['warehouse_id'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Postingv3GetFbsPostingListRequestFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Postingv3GetFbsPostingListRequestFilter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['delivery_method_id'])) {
            throw new Error("Expected the field `delivery_method_id` to be an array in the JSON data but got " + data['delivery_method_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['provider_id'])) {
            throw new Error("Expected the field `provider_id` to be an array in the JSON data but got " + data['provider_id']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['warehouse_id'])) {
            throw new Error("Expected the field `warehouse_id` to be an array in the JSON data but got " + data['warehouse_id']);
        }

        return true;
    }


}



/**
 * Идентификатор способа доставки.
 * @member {Array.<Number>} delivery_method_id
 */
Postingv3GetFbsPostingListRequestFilter.prototype['delivery_method_id'] = undefined;

/**
 * Идентификатор заказа.
 * @member {Number} order_id
 */
Postingv3GetFbsPostingListRequestFilter.prototype['order_id'] = undefined;

/**
 * Идентификатор службы доставки.
 * @member {Array.<Number>} provider_id
 */
Postingv3GetFbsPostingListRequestFilter.prototype['provider_id'] = undefined;

/**
 * Дата начала периода, за который нужно получить список отправлений.  Формат UTC: ГГГГ-ММ-ДДTЧЧ:ММ:ССZ.  Пример: 2019-08-24T14:15:22Z. 
 * @member {Date} since
 */
Postingv3GetFbsPostingListRequestFilter.prototype['since'] = undefined;

/**
 * Дата конца периода, за который нужно получить список отправлений.  Формат UTC: ГГГГ-ММ-ДДTЧЧ:ММ:ССZ.  Пример: 2019-08-24T14:15:22Z. 
 * @member {Date} to
 */
Postingv3GetFbsPostingListRequestFilter.prototype['to'] = undefined;

/**
 * Статус отправления: - `awaiting_registration` — ожидает регистрации, - `acceptance_in_progress` — идёт приёмка, - `awaiting_approve` — ожидает подтверждения, - `awaiting_packaging` — ожидает упаковки, - `awaiting_deliver` — ожидает отгрузки, - `arbitration` — арбитраж, - `client_arbitration` — клиентский арбитраж доставки, - `delivering` — доставляется, - `driver_pickup` — у водителя, - `delivered` — доставлено, - `cancelled` — отменено, - `not_accepted` — не принят на сортировочном центре, - `sent_by_seller` – отправлено продавцом. 
 * @member {String} status
 */
Postingv3GetFbsPostingListRequestFilter.prototype['status'] = undefined;

/**
 * Идентификатор склада.
 * @member {Array.<Number>} warehouse_id
 */
Postingv3GetFbsPostingListRequestFilter.prototype['warehouse_id'] = undefined;






export default Postingv3GetFbsPostingListRequestFilter;

