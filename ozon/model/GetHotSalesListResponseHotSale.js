/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetHotSalesListResponseHotSale model module.
 * @module model/GetHotSalesListResponseHotSale
 * @version 2.1
 */
class GetHotSalesListResponseHotSale {
    /**
     * Constructs a new <code>GetHotSalesListResponseHotSale</code>.
     * @alias module:model/GetHotSalesListResponseHotSale
     */
    constructor() { 
        
        GetHotSalesListResponseHotSale.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetHotSalesListResponseHotSale</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetHotSalesListResponseHotSale} obj Optional instance to populate.
     * @return {module:model/GetHotSalesListResponseHotSale} The populated <code>GetHotSalesListResponseHotSale</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetHotSalesListResponseHotSale();

            if (data.hasOwnProperty('date_end')) {
                obj['date_end'] = ApiClient.convertToType(data['date_end'], 'String');
            }
            if (data.hasOwnProperty('date_start')) {
                obj['date_start'] = ApiClient.convertToType(data['date_start'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('freeze_date')) {
                obj['freeze_date'] = ApiClient.convertToType(data['freeze_date'], 'String');
            }
            if (data.hasOwnProperty('hotsale_id')) {
                obj['hotsale_id'] = ApiClient.convertToType(data['hotsale_id'], 'Number');
            }
            if (data.hasOwnProperty('is_participating')) {
                obj['is_participating'] = ApiClient.convertToType(data['is_participating'], 'Boolean');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetHotSalesListResponseHotSale</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetHotSalesListResponseHotSale</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['date_end'] && !(typeof data['date_end'] === 'string' || data['date_end'] instanceof String)) {
            throw new Error("Expected the field `date_end` to be a primitive type in the JSON string but got " + data['date_end']);
        }
        // ensure the json data is a string
        if (data['date_start'] && !(typeof data['date_start'] === 'string' || data['date_start'] instanceof String)) {
            throw new Error("Expected the field `date_start` to be a primitive type in the JSON string but got " + data['date_start']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['freeze_date'] && !(typeof data['freeze_date'] === 'string' || data['freeze_date'] instanceof String)) {
            throw new Error("Expected the field `freeze_date` to be a primitive type in the JSON string but got " + data['freeze_date']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * Дата окончания акции.
 * @member {String} date_end
 */
GetHotSalesListResponseHotSale.prototype['date_end'] = undefined;

/**
 * Дата начала акции.
 * @member {String} date_start
 */
GetHotSalesListResponseHotSale.prototype['date_start'] = undefined;

/**
 * Описание акции.
 * @member {String} description
 */
GetHotSalesListResponseHotSale.prototype['description'] = undefined;

/**
 * Дата приостановки акции.  Если поле заполнено, продавец не может повышать цены, изменять список товаров и уменьшать количество единиц товаров в акции.  Продавец может понижать цены и увеличивать количество единиц товара в акции. 
 * @member {String} freeze_date
 */
GetHotSalesListResponseHotSale.prototype['freeze_date'] = undefined;

/**
 * Идентификатор акции Hot Sale.
 * @member {Number} hotsale_id
 */
GetHotSalesListResponseHotSale.prototype['hotsale_id'] = undefined;

/**
 * Признак, что вы участвуете в этой акции.
 * @member {Boolean} is_participating
 */
GetHotSalesListResponseHotSale.prototype['is_participating'] = undefined;

/**
 * Название акции.
 * @member {String} title
 */
GetHotSalesListResponseHotSale.prototype['title'] = undefined;






export default GetHotSalesListResponseHotSale;

