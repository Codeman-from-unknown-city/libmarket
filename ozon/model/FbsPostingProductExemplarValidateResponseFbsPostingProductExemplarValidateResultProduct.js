/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar from './FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar';

/**
 * The FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct model module.
 * @module model/FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct
 * @version 2.1
 */
class FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct {
    /**
     * Constructs a new <code>FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct</code>.
     * @alias module:model/FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct
     */
    constructor() { 
        
        FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct} obj Optional instance to populate.
     * @return {module:model/FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct} The populated <code>FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct();

            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
            if (data.hasOwnProperty('exemplars')) {
                obj['exemplars'] = ApiClient.convertToType(data['exemplars'], [FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar]);
            }
            if (data.hasOwnProperty('product_id')) {
                obj['product_id'] = ApiClient.convertToType(data['product_id'], 'Number');
            }
            if (data.hasOwnProperty('valid')) {
                obj['valid'] = ApiClient.convertToType(data['valid'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['error'] && !(typeof data['error'] === 'string' || data['error'] instanceof String)) {
            throw new Error("Expected the field `error` to be a primitive type in the JSON string but got " + data['error']);
        }
        if (data['exemplars']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['exemplars'])) {
                throw new Error("Expected the field `exemplars` to be an array in the JSON data but got " + data['exemplars']);
            }
            // validate the optional field `exemplars` (array)
            for (const item of data['exemplars']) {
                FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar.validateJsonObject(item);
            };
        }

        return true;
    }


}



/**
 * Код ошибки.
 * @member {String} error
 */
FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct.prototype['error'] = undefined;

/**
 * Информация об экземплярах.
 * @member {Array.<module:model/FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar>} exemplars
 */
FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct.prototype['exemplars'] = undefined;

/**
 * Идентификатор товара.
 * @member {Number} product_id
 */
FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct.prototype['product_id'] = undefined;

/**
 * Результат прохождения проверки. `true`, если коды всех экземпляров соответствуют требованиям.
 * @member {Boolean} valid
 */
FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct.prototype['valid'] = undefined;






export default FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProduct;

