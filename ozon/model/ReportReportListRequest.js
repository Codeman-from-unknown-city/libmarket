/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReportReportListRequest model module.
 * @module model/ReportReportListRequest
 * @version 2.1
 */
class ReportReportListRequest {
    /**
     * Constructs a new <code>ReportReportListRequest</code>.
     * @alias module:model/ReportReportListRequest
     */
    constructor() { 
        
        ReportReportListRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReportReportListRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportReportListRequest} obj Optional instance to populate.
     * @return {module:model/ReportReportListRequest} The populated <code>ReportReportListRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportReportListRequest();

            if (data.hasOwnProperty('page')) {
                obj['page'] = ApiClient.convertToType(data['page'], 'Number');
            }
            if (data.hasOwnProperty('page_size')) {
                obj['page_size'] = ApiClient.convertToType(data['page_size'], 'Number');
            }
            if (data.hasOwnProperty('report_type')) {
                obj['report_type'] = ApiClient.convertToType(data['report_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReportReportListRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReportReportListRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['report_type'] && !(typeof data['report_type'] === 'string' || data['report_type'] instanceof String)) {
            throw new Error("Expected the field `report_type` to be a primitive type in the JSON string but got " + data['report_type']);
        }

        return true;
    }


}



/**
 * Номер страницы.
 * @member {Number} page
 */
ReportReportListRequest.prototype['page'] = undefined;

/**
 * Количество значений на странице:   - по умолчанию — 100,   - маĸсимальное значение — 1000. 
 * @member {Number} page_size
 */
ReportReportListRequest.prototype['page_size'] = undefined;

/**
 * Тип отчёта:   - `ALL` — все отчёты,   - `SELLER_PRODUCTS` — отчёт по товарам,   - `SELLER_TRANSACTIONS` — отчёт по транзакциям,   - `SELLER_PRODUCT_PRICES` — отчёт по ценам товаров,   - `SELLER_STOCK` — отчёт об остатках товаров,   - `SELLER_PRODUCT_MOVEMENT` — отчёт о перемещении товаров,   - `SELLER_RETURNS` — отчёт о возвратах,   - `SELLER_POSTINGS` — отчёт об отправлениях,   - `SELLER_FINANCE` — отчёт о финансах. 
 * @member {String} report_type
 * @default 'ALL'
 */
ReportReportListRequest.prototype['report_type'] = 'ALL';






export default ReportReportListRequest;

