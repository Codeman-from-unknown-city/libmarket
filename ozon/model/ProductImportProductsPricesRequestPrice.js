/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProductImportProductsPricesRequestPrice model module.
 * @module model/ProductImportProductsPricesRequestPrice
 * @version 2.1
 */
class ProductImportProductsPricesRequestPrice {
    /**
     * Constructs a new <code>ProductImportProductsPricesRequestPrice</code>.
     * @alias module:model/ProductImportProductsPricesRequestPrice
     */
    constructor() { 
        
        ProductImportProductsPricesRequestPrice.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductImportProductsPricesRequestPrice</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductImportProductsPricesRequestPrice} obj Optional instance to populate.
     * @return {module:model/ProductImportProductsPricesRequestPrice} The populated <code>ProductImportProductsPricesRequestPrice</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductImportProductsPricesRequestPrice();

            if (data.hasOwnProperty('auto_action_enabled')) {
                obj['auto_action_enabled'] = ApiClient.convertToType(data['auto_action_enabled'], 'String');
            }
            if (data.hasOwnProperty('currency_code')) {
                obj['currency_code'] = ApiClient.convertToType(data['currency_code'], 'String');
            }
            if (data.hasOwnProperty('min_price')) {
                obj['min_price'] = ApiClient.convertToType(data['min_price'], 'String');
            }
            if (data.hasOwnProperty('offer_id')) {
                obj['offer_id'] = ApiClient.convertToType(data['offer_id'], 'String');
            }
            if (data.hasOwnProperty('old_price')) {
                obj['old_price'] = ApiClient.convertToType(data['old_price'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'String');
            }
            if (data.hasOwnProperty('product_id')) {
                obj['product_id'] = ApiClient.convertToType(data['product_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductImportProductsPricesRequestPrice</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductImportProductsPricesRequestPrice</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['auto_action_enabled'] && !(typeof data['auto_action_enabled'] === 'string' || data['auto_action_enabled'] instanceof String)) {
            throw new Error("Expected the field `auto_action_enabled` to be a primitive type in the JSON string but got " + data['auto_action_enabled']);
        }
        // ensure the json data is a string
        if (data['currency_code'] && !(typeof data['currency_code'] === 'string' || data['currency_code'] instanceof String)) {
            throw new Error("Expected the field `currency_code` to be a primitive type in the JSON string but got " + data['currency_code']);
        }
        // ensure the json data is a string
        if (data['min_price'] && !(typeof data['min_price'] === 'string' || data['min_price'] instanceof String)) {
            throw new Error("Expected the field `min_price` to be a primitive type in the JSON string but got " + data['min_price']);
        }
        // ensure the json data is a string
        if (data['offer_id'] && !(typeof data['offer_id'] === 'string' || data['offer_id'] instanceof String)) {
            throw new Error("Expected the field `offer_id` to be a primitive type in the JSON string but got " + data['offer_id']);
        }
        // ensure the json data is a string
        if (data['old_price'] && !(typeof data['old_price'] === 'string' || data['old_price'] instanceof String)) {
            throw new Error("Expected the field `old_price` to be a primitive type in the JSON string but got " + data['old_price']);
        }
        // ensure the json data is a string
        if (data['price'] && !(typeof data['price'] === 'string' || data['price'] instanceof String)) {
            throw new Error("Expected the field `price` to be a primitive type in the JSON string but got " + data['price']);
        }

        return true;
    }


}



/**
 * Атрибут для включения и выключения автоприменения акций: - `ENABLED` — включить автоприменение акций; - `DISABLED` — выключить автоприменение акций; - `UNKNOWN` — ничего не менять, передаётся по умолчанию.  Например, если ранее вы включили автоприменение акций и не хотите выключать его, передавайте `UNKNOWN`.  Если вы передаёте `ENABLED` в этом параметре, установите значение минимальной цены в параметре `min_price`. 
 * @member {module:model/ProductImportProductsPricesRequestPrice.AutoActionEnabledEnum} auto_action_enabled
 * @default 'UNKNOWN'
 */
ProductImportProductsPricesRequestPrice.prototype['auto_action_enabled'] = 'UNKNOWN';

/**
 * Валюта ваших цен. Переданное значение должно совпадать с валютой, которая установлена в настройках личного кабинета. По умолчанию передаётся `RUB` — российский рубль.  Например, если у вас установлена валюта взаиморасчётов юань, передавайте значение `CNY`, иначе вернётся ошибка.  Возможные значения:    - `RUB` — российский рубль,   - `BYN` — белорусский рубль,   - `KZT` — тенге,   - `EUR` — евро,   - `USD` — доллар США,   - `CNY` — юань. 
 * @member {String} currency_code
 */
ProductImportProductsPricesRequestPrice.prototype['currency_code'] = undefined;

/**
 * Минимальная цена товара после применения акций.
 * @member {String} min_price
 */
ProductImportProductsPricesRequestPrice.prototype['min_price'] = undefined;

/**
 * Идентификатор товара в системе продавца.
 * @member {String} offer_id
 */
ProductImportProductsPricesRequestPrice.prototype['offer_id'] = undefined;

/**
 * Цена до скидок (зачеркнута на карточке товара). Указывается в рублях. Разделитель дробной части — точка, до двух знаков после точки.  Если на товар нет скидок, укажите значение `0` в этом поле, а текущую цену передайте в поле `price`. 
 * @member {String} old_price
 */
ProductImportProductsPricesRequestPrice.prototype['old_price'] = undefined;

/**
 * Цена товара с учётом скидок, отображается на карточке товара.  Если текущая цена товара от 400 до 10 000 рублей включительно, разница между значениями `price` и `old_price` должна быть больше 5%, но не менее 20 рублей. 
 * @member {String} price
 */
ProductImportProductsPricesRequestPrice.prototype['price'] = undefined;

/**
 * Идентификатор товара.
 * @member {Number} product_id
 */
ProductImportProductsPricesRequestPrice.prototype['product_id'] = undefined;





/**
 * Allowed values for the <code>auto_action_enabled</code> property.
 * @enum {String}
 * @readonly
 */
ProductImportProductsPricesRequestPrice['AutoActionEnabledEnum'] = {

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "ENABLED"
     * @const
     */
    "ENABLED": "ENABLED",

    /**
     * value: "DISABLED"
     * @const
     */
    "DISABLED": "DISABLED"
};



export default ProductImportProductsPricesRequestPrice;

