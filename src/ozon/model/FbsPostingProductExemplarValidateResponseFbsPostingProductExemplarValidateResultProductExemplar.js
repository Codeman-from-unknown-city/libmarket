/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar model module.
 * @module model/FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar
 * @version 2.1
 */
class FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar {
    /**
     * Constructs a new <code>FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar</code>.
     * @alias module:model/FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar
     */
    constructor() { 
        
        FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar} obj Optional instance to populate.
     * @return {module:model/FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar} The populated <code>FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar();

            if (data.hasOwnProperty('errors')) {
                obj['errors'] = ApiClient.convertToType(data['errors'], ['String']);
            }
            if (data.hasOwnProperty('gtd')) {
                obj['gtd'] = ApiClient.convertToType(data['gtd'], 'String');
            }
            if (data.hasOwnProperty('mandatory_mark')) {
                obj['mandatory_mark'] = ApiClient.convertToType(data['mandatory_mark'], 'String');
            }
            if (data.hasOwnProperty('valid')) {
                obj['valid'] = ApiClient.convertToType(data['valid'], 'Boolean');
            }
            if (data.hasOwnProperty('rnpt')) {
                obj['rnpt'] = ApiClient.convertToType(data['rnpt'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['errors'])) {
            throw new Error("Expected the field `errors` to be an array in the JSON data but got " + data['errors']);
        }
        // ensure the json data is a string
        if (data['gtd'] && !(typeof data['gtd'] === 'string' || data['gtd'] instanceof String)) {
            throw new Error("Expected the field `gtd` to be a primitive type in the JSON string but got " + data['gtd']);
        }
        // ensure the json data is a string
        if (data['mandatory_mark'] && !(typeof data['mandatory_mark'] === 'string' || data['mandatory_mark'] instanceof String)) {
            throw new Error("Expected the field `mandatory_mark` to be a primitive type in the JSON string but got " + data['mandatory_mark']);
        }
        // ensure the json data is a string
        if (data['rnpt'] && !(typeof data['rnpt'] === 'string' || data['rnpt'] instanceof String)) {
            throw new Error("Expected the field `rnpt` to be a primitive type in the JSON string but got " + data['rnpt']);
        }

        return true;
    }


}



/**
 * Ошибки валидации экземпляра.
 * @member {Array.<String>} errors
 */
FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar.prototype['errors'] = undefined;

/**
 * Номер грузовой таможенной декларации (ГТД).
 * @member {String} gtd
 */
FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar.prototype['gtd'] = undefined;

/**
 * Обязательная маркировка «Честный ЗНАК».
 * @member {String} mandatory_mark
 */
FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar.prototype['mandatory_mark'] = undefined;

/**
 * Результат прохождения проверки. `true`, если код экземпляра соответствует требованиям.
 * @member {Boolean} valid
 */
FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar.prototype['valid'] = undefined;

/**
 * Регистрационный номер партии товара (РНПТ).
 * @member {String} rnpt
 */
FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar.prototype['rnpt'] = undefined;






export default FbsPostingProductExemplarValidateResponseFbsPostingProductExemplarValidateResultProductExemplar;

