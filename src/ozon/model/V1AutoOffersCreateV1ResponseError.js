/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The V1AutoOffersCreateV1ResponseError model module.
 * @module model/V1AutoOffersCreateV1ResponseError
 * @version 2.1
 */
class V1AutoOffersCreateV1ResponseError {
    /**
     * Constructs a new <code>V1AutoOffersCreateV1ResponseError</code>.
     * @alias module:model/V1AutoOffersCreateV1ResponseError
     */
    constructor() { 
        
        V1AutoOffersCreateV1ResponseError.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>V1AutoOffersCreateV1ResponseError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1AutoOffersCreateV1ResponseError} obj Optional instance to populate.
     * @return {module:model/V1AutoOffersCreateV1ResponseError} The populated <code>V1AutoOffersCreateV1ResponseError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1AutoOffersCreateV1ResponseError();

            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('offer_id')) {
                obj['offer_id'] = ApiClient.convertToType(data['offer_id'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>V1AutoOffersCreateV1ResponseError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>V1AutoOffersCreateV1ResponseError</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['offer_id'] && !(typeof data['offer_id'] === 'string' || data['offer_id'] instanceof String)) {
            throw new Error("Expected the field `offer_id` to be a primitive type in the JSON string but got " + data['offer_id']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Текст ошибки.
 * @member {String} message
 */
V1AutoOffersCreateV1ResponseError.prototype['message'] = undefined;

/**
 * Идентификатор предложения в системе автодилера.
 * @member {String} offer_id
 */
V1AutoOffersCreateV1ResponseError.prototype['offer_id'] = undefined;

/**
 * Тип ошибки: - `INTERNAL` — внутренняя ошибка,  - `INVALID_ARGUMENT` — передано некорректное значение,  - `ALREADY_EXISTS` — предложение уже существует. 
 * @member {module:model/V1AutoOffersCreateV1ResponseError.TypeEnum} type
 * @default 'INTERNAL'
 */
V1AutoOffersCreateV1ResponseError.prototype['type'] = 'INTERNAL';





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
V1AutoOffersCreateV1ResponseError['TypeEnum'] = {

    /**
     * value: "INTERNAL"
     * @const
     */
    "INTERNAL": "INTERNAL",

    /**
     * value: "INVALID_ARGUMENT"
     * @const
     */
    "INVALID_ARGUMENT": "INVALID_ARGUMENT",

    /**
     * value: "ALREADY_EXISTS"
     * @const
     */
    "ALREADY_EXISTS": "ALREADY_EXISTS"
};



export default V1AutoOffersCreateV1ResponseError;

