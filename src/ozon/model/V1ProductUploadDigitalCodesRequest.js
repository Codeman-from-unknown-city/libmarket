/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The V1ProductUploadDigitalCodesRequest model module.
 * @module model/V1ProductUploadDigitalCodesRequest
 * @version 2.1
 */
class V1ProductUploadDigitalCodesRequest {
    /**
     * Constructs a new <code>V1ProductUploadDigitalCodesRequest</code>.
     * @alias module:model/V1ProductUploadDigitalCodesRequest
     */
    constructor() { 
        
        V1ProductUploadDigitalCodesRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>V1ProductUploadDigitalCodesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1ProductUploadDigitalCodesRequest} obj Optional instance to populate.
     * @return {module:model/V1ProductUploadDigitalCodesRequest} The populated <code>V1ProductUploadDigitalCodesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1ProductUploadDigitalCodesRequest();

            if (data.hasOwnProperty('digital_codes')) {
                obj['digital_codes'] = ApiClient.convertToType(data['digital_codes'], ['String']);
            }
            if (data.hasOwnProperty('product_id')) {
                obj['product_id'] = ApiClient.convertToType(data['product_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>V1ProductUploadDigitalCodesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>V1ProductUploadDigitalCodesRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['digital_codes'])) {
            throw new Error("Expected the field `digital_codes` to be an array in the JSON data but got " + data['digital_codes']);
        }

        return true;
    }


}



/**
 * Цифровые коды активации.
 * @member {Array.<String>} digital_codes
 */
V1ProductUploadDigitalCodesRequest.prototype['digital_codes'] = undefined;

/**
 * Идентификатор товара.
 * @member {Number} product_id
 */
V1ProductUploadDigitalCodesRequest.prototype['product_id'] = undefined;






export default V1ProductUploadDigitalCodesRequest;

