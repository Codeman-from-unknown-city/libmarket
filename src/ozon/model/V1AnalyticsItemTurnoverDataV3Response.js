/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnalyticsItemTurnoverDataV3ResponseCategory from './AnalyticsItemTurnoverDataV3ResponseCategory';

/**
 * The V1AnalyticsItemTurnoverDataV3Response model module.
 * @module model/V1AnalyticsItemTurnoverDataV3Response
 * @version 2.1
 */
class V1AnalyticsItemTurnoverDataV3Response {
    /**
     * Constructs a new <code>V1AnalyticsItemTurnoverDataV3Response</code>.
     * @alias module:model/V1AnalyticsItemTurnoverDataV3Response
     */
    constructor() { 
        
        V1AnalyticsItemTurnoverDataV3Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>V1AnalyticsItemTurnoverDataV3Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1AnalyticsItemTurnoverDataV3Response} obj Optional instance to populate.
     * @return {module:model/V1AnalyticsItemTurnoverDataV3Response} The populated <code>V1AnalyticsItemTurnoverDataV3Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1AnalyticsItemTurnoverDataV3Response();

            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], [AnalyticsItemTurnoverDataV3ResponseCategory]);
            }
            if (data.hasOwnProperty('commission_total')) {
                obj['commission_total'] = ApiClient.convertToType(data['commission_total'], 'Number');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
            if (data.hasOwnProperty('period')) {
                obj['period'] = ApiClient.convertToType(data['period'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>V1AnalyticsItemTurnoverDataV3Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>V1AnalyticsItemTurnoverDataV3Response</code>.
     */
    static validateJSON(data) {
        if (data['categories']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['categories'])) {
                throw new Error("Expected the field `categories` to be an array in the JSON data but got " + data['categories']);
            }
            // validate the optional field `categories` (array)
            for (const item of data['categories']) {
                AnalyticsItemTurnoverDataV3ResponseCategory.validateJsonObject(item);
            };
        }
        // ensure the json data is a string
        if (data['date'] && !(typeof data['date'] === 'string' || data['date'] instanceof String)) {
            throw new Error("Expected the field `date` to be a primitive type in the JSON string but got " + data['date']);
        }
        // ensure the json data is a string
        if (data['period'] && !(typeof data['period'] === 'string' || data['period'] instanceof String)) {
            throw new Error("Expected the field `period` to be a primitive type in the JSON string but got " + data['period']);
        }

        return true;
    }


}



/**
 * Данные по категориям.
 * @member {Array.<module:model/AnalyticsItemTurnoverDataV3ResponseCategory>} categories
 */
V1AnalyticsItemTurnoverDataV3Response.prototype['categories'] = undefined;

/**
 * Стоимость размещения в рублях.
 * @member {Number} commission_total
 */
V1AnalyticsItemTurnoverDataV3Response.prototype['commission_total'] = undefined;

/**
 * Дата выгрузки.
 * @member {String} date
 */
V1AnalyticsItemTurnoverDataV3Response.prototype['date'] = undefined;

/**
 * Период отчёта.
 * @member {String} period
 */
V1AnalyticsItemTurnoverDataV3Response.prototype['period'] = undefined;






export default V1AnalyticsItemTurnoverDataV3Response;

