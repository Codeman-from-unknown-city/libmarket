/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetConditionalCancellationListRequestFilters model module.
 * @module model/GetConditionalCancellationListRequestFilters
 * @version 2.1
 */
class GetConditionalCancellationListRequestFilters {
    /**
     * Constructs a new <code>GetConditionalCancellationListRequestFilters</code>.
     * Фильтры.
     * @alias module:model/GetConditionalCancellationListRequestFilters
     */
    constructor() { 
        
        GetConditionalCancellationListRequestFilters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetConditionalCancellationListRequestFilters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetConditionalCancellationListRequestFilters} obj Optional instance to populate.
     * @return {module:model/GetConditionalCancellationListRequestFilters} The populated <code>GetConditionalCancellationListRequestFilters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetConditionalCancellationListRequestFilters();

            if (data.hasOwnProperty('cancellation_initiator')) {
                obj['cancellation_initiator'] = ApiClient.convertToType(data['cancellation_initiator'], ['String']);
            }
            if (data.hasOwnProperty('posting_number')) {
                obj['posting_number'] = ApiClient.convertToType(data['posting_number'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetConditionalCancellationListRequestFilters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetConditionalCancellationListRequestFilters</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['cancellation_initiator'])) {
            throw new Error("Expected the field `cancellation_initiator` to be an array in the JSON data but got " + data['cancellation_initiator']);
        }
        // ensure the json data is a string
        if (data['posting_number'] && !(typeof data['posting_number'] === 'string' || data['posting_number'] instanceof String)) {
            throw new Error("Expected the field `posting_number` to be a primitive type in the JSON string but got " + data['posting_number']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * Фильтр по инициатору отмены: - `OZON` — Ozon,  - `SELLER` — продавец,  - `CLIENT` — покупатель,  - `SYSTEM` — система,  - `DELIVERY` — служба доставки.  Необязательный параметр. Можно передавать несколько значений. 
 * @member {Array.<module:model/GetConditionalCancellationListRequestFilters.CancellationInitiatorEnum>} cancellation_initiator
 */
GetConditionalCancellationListRequestFilters.prototype['cancellation_initiator'] = undefined;

/**
 * Фильтр по номеру отправления.  Необязательный параметр. Можно передавать несколько значений. 
 * @member {String} posting_number
 */
GetConditionalCancellationListRequestFilters.prototype['posting_number'] = undefined;

/**
 * Фильтр по статусу заявки на отмену: - `ALL` — заявки в любом статусе,  - `ON_APPROVAL` — заявки на рассмотрении, - `APPROVED` — подтверждённые заявки,  - `REJECTED` — отклонённые заявки. 
 * @member {module:model/GetConditionalCancellationListRequestFilters.StateEnum} state
 */
GetConditionalCancellationListRequestFilters.prototype['state'] = undefined;





/**
 * Allowed values for the <code>cancellationInitiator</code> property.
 * @enum {String}
 * @readonly
 */
GetConditionalCancellationListRequestFilters['CancellationInitiatorEnum'] = {

    /**
     * value: "OZON"
     * @const
     */
    "OZON": "OZON",

    /**
     * value: "SELLER"
     * @const
     */
    "SELLER": "SELLER",

    /**
     * value: "CLIENT"
     * @const
     */
    "CLIENT": "CLIENT",

    /**
     * value: "SYSTEM"
     * @const
     */
    "SYSTEM": "SYSTEM",

    /**
     * value: "DELIVER"
     * @const
     */
    "DELIVER": "DELIVER"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GetConditionalCancellationListRequestFilters['StateEnum'] = {

    /**
     * value: "ALL"
     * @const
     */
    "ALL": "ALL",

    /**
     * value: "ON_APPROVAL"
     * @const
     */
    "ON_APPROVAL": "ON_APPROVAL",

    /**
     * value: "APPROVED"
     * @const
     */
    "APPROVED": "APPROVED",

    /**
     * value: "REJECTED"
     * @const
     */
    "REJECTED": "REJECTED"
};



export default GetConditionalCancellationListRequestFilters;

