/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The V2PostingFBSActListFilter model module.
 * @module model/V2PostingFBSActListFilter
 * @version 2.1
 */
class V2PostingFBSActListFilter {
    /**
     * Constructs a new <code>V2PostingFBSActListFilter</code>.
     * Параметры фильтра.
     * @alias module:model/V2PostingFBSActListFilter
     */
    constructor() { 
        
        V2PostingFBSActListFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>V2PostingFBSActListFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V2PostingFBSActListFilter} obj Optional instance to populate.
     * @return {module:model/V2PostingFBSActListFilter} The populated <code>V2PostingFBSActListFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V2PostingFBSActListFilter();

            if (data.hasOwnProperty('date_from')) {
                obj['date_from'] = ApiClient.convertToType(data['date_from'], 'String');
            }
            if (data.hasOwnProperty('date_to')) {
                obj['date_to'] = ApiClient.convertToType(data['date_to'], 'String');
            }
            if (data.hasOwnProperty('integration_type')) {
                obj['integration_type'] = ApiClient.convertToType(data['integration_type'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>V2PostingFBSActListFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>V2PostingFBSActListFilter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['date_from'] && !(typeof data['date_from'] === 'string' || data['date_from'] instanceof String)) {
            throw new Error("Expected the field `date_from` to be a primitive type in the JSON string but got " + data['date_from']);
        }
        // ensure the json data is a string
        if (data['date_to'] && !(typeof data['date_to'] === 'string' || data['date_to'] instanceof String)) {
            throw new Error("Expected the field `date_to` to be a primitive type in the JSON string but got " + data['date_to']);
        }
        // ensure the json data is a string
        if (data['integration_type'] && !(typeof data['integration_type'] === 'string' || data['integration_type'] instanceof String)) {
            throw new Error("Expected the field `integration_type` to be a primitive type in the JSON string but got " + data['integration_type']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['status'])) {
            throw new Error("Expected the field `status` to be an array in the JSON data but got " + data['status']);
        }

        return true;
    }


}



/**
 * Начальная дата создания отгрузок.
 * @member {String} date_from
 */
V2PostingFBSActListFilter.prototype['date_from'] = undefined;

/**
 * Конечная дата создания отгрузок.
 * @member {String} date_to
 */
V2PostingFBSActListFilter.prototype['date_to'] = undefined;

/**
 * Тип интеграции со службой доставки:   - `ozon` — доставка через Ozon логистику.   - `aggregator` — доставка внешней службой, Ozon регистрирует заказ.   - `3pl_tracking` — доставка внешней службой, продавец регистрирует заказ.   - `non_integrated` — доставка силами продавца. 
 * @member {String} integration_type
 */
V2PostingFBSActListFilter.prototype['integration_type'] = undefined;

/**
 * Список статусов отгрузок:   - `awaiting_registration` — ожидает регистрации,   - `acceptance_in_progress` — идёт приёмка,   - `awaiting_approve` — ожидает подтверждения,   - `awaiting_packaging` — ожидает упаковки,   - `awaiting_deliver` — ожидает отгрузки,   - `arbitration` — арбитраж,   - `client_arbitration` — клиентский арбитраж доставки,   - `delivering` — доставляется,   - `driver_pickup` — у водителя,   - `delivered` — доставлено,   - `cancelled` — отменено,   - `not_accepted` — не принят на сортировочном центре,   - `sent_by_seller` – отправлено продавцом. 
 * @member {Array.<String>} status
 */
V2PostingFBSActListFilter.prototype['status'] = undefined;






export default V2PostingFBSActListFilter;

