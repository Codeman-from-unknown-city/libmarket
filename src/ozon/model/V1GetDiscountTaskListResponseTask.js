/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The V1GetDiscountTaskListResponseTask model module.
 * @module model/V1GetDiscountTaskListResponseTask
 * @version 2.1
 */
class V1GetDiscountTaskListResponseTask {
    /**
     * Constructs a new <code>V1GetDiscountTaskListResponseTask</code>.
     * @alias module:model/V1GetDiscountTaskListResponseTask
     */
    constructor() { 
        
        V1GetDiscountTaskListResponseTask.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>V1GetDiscountTaskListResponseTask</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1GetDiscountTaskListResponseTask} obj Optional instance to populate.
     * @return {module:model/V1GetDiscountTaskListResponseTask} The populated <code>V1GetDiscountTaskListResponseTask</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1GetDiscountTaskListResponseTask();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('end_at')) {
                obj['end_at'] = ApiClient.convertToType(data['end_at'], 'Date');
            }
            if (data.hasOwnProperty('edited_till')) {
                obj['edited_till'] = ApiClient.convertToType(data['edited_till'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('customer_name')) {
                obj['customer_name'] = ApiClient.convertToType(data['customer_name'], 'String');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'Number');
            }
            if (data.hasOwnProperty('user_comment')) {
                obj['user_comment'] = ApiClient.convertToType(data['user_comment'], 'String');
            }
            if (data.hasOwnProperty('seller_comment')) {
                obj['seller_comment'] = ApiClient.convertToType(data['seller_comment'], 'String');
            }
            if (data.hasOwnProperty('requested_price')) {
                obj['requested_price'] = ApiClient.convertToType(data['requested_price'], 'Number');
            }
            if (data.hasOwnProperty('approved_price')) {
                obj['approved_price'] = ApiClient.convertToType(data['approved_price'], 'Number');
            }
            if (data.hasOwnProperty('original_price')) {
                obj['original_price'] = ApiClient.convertToType(data['original_price'], 'Number');
            }
            if (data.hasOwnProperty('discount')) {
                obj['discount'] = ApiClient.convertToType(data['discount'], 'Number');
            }
            if (data.hasOwnProperty('discount_percent')) {
                obj['discount_percent'] = ApiClient.convertToType(data['discount_percent'], 'Number');
            }
            if (data.hasOwnProperty('base_price')) {
                obj['base_price'] = ApiClient.convertToType(data['base_price'], 'Number');
            }
            if (data.hasOwnProperty('min_auto_price')) {
                obj['min_auto_price'] = ApiClient.convertToType(data['min_auto_price'], 'Number');
            }
            if (data.hasOwnProperty('prev_task_id')) {
                obj['prev_task_id'] = ApiClient.convertToType(data['prev_task_id'], 'Number');
            }
            if (data.hasOwnProperty('is_damaged')) {
                obj['is_damaged'] = ApiClient.convertToType(data['is_damaged'], 'Boolean');
            }
            if (data.hasOwnProperty('moderated_at')) {
                obj['moderated_at'] = ApiClient.convertToType(data['moderated_at'], 'Date');
            }
            if (data.hasOwnProperty('approved_discount')) {
                obj['approved_discount'] = ApiClient.convertToType(data['approved_discount'], 'Number');
            }
            if (data.hasOwnProperty('approved_discount_percent')) {
                obj['approved_discount_percent'] = ApiClient.convertToType(data['approved_discount_percent'], 'Number');
            }
            if (data.hasOwnProperty('is_purchased')) {
                obj['is_purchased'] = ApiClient.convertToType(data['is_purchased'], 'Boolean');
            }
            if (data.hasOwnProperty('is_auto_moderated')) {
                obj['is_auto_moderated'] = ApiClient.convertToType(data['is_auto_moderated'], 'Boolean');
            }
            if (data.hasOwnProperty('offer_id')) {
                obj['offer_id'] = ApiClient.convertToType(data['offer_id'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('last_name')) {
                obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
            }
            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
            }
            if (data.hasOwnProperty('patronymic')) {
                obj['patronymic'] = ApiClient.convertToType(data['patronymic'], 'String');
            }
            if (data.hasOwnProperty('approved_quantity_min')) {
                obj['approved_quantity_min'] = ApiClient.convertToType(data['approved_quantity_min'], 'Number');
            }
            if (data.hasOwnProperty('approved_quantity_max')) {
                obj['approved_quantity_max'] = ApiClient.convertToType(data['approved_quantity_max'], 'Number');
            }
            if (data.hasOwnProperty('requested_quantity_min')) {
                obj['requested_quantity_min'] = ApiClient.convertToType(data['requested_quantity_min'], 'Number');
            }
            if (data.hasOwnProperty('requested_quantity_max')) {
                obj['requested_quantity_max'] = ApiClient.convertToType(data['requested_quantity_max'], 'Number');
            }
            if (data.hasOwnProperty('requested_price_with_fee')) {
                obj['requested_price_with_fee'] = ApiClient.convertToType(data['requested_price_with_fee'], 'Number');
            }
            if (data.hasOwnProperty('approved_price_with_fee')) {
                obj['approved_price_with_fee'] = ApiClient.convertToType(data['approved_price_with_fee'], 'Number');
            }
            if (data.hasOwnProperty('approved_price_fee_percent')) {
                obj['approved_price_fee_percent'] = ApiClient.convertToType(data['approved_price_fee_percent'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>V1GetDiscountTaskListResponseTask</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>V1GetDiscountTaskListResponseTask</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['customer_name'] && !(typeof data['customer_name'] === 'string' || data['customer_name'] instanceof String)) {
            throw new Error("Expected the field `customer_name` to be a primitive type in the JSON string but got " + data['customer_name']);
        }
        // ensure the json data is a string
        if (data['user_comment'] && !(typeof data['user_comment'] === 'string' || data['user_comment'] instanceof String)) {
            throw new Error("Expected the field `user_comment` to be a primitive type in the JSON string but got " + data['user_comment']);
        }
        // ensure the json data is a string
        if (data['seller_comment'] && !(typeof data['seller_comment'] === 'string' || data['seller_comment'] instanceof String)) {
            throw new Error("Expected the field `seller_comment` to be a primitive type in the JSON string but got " + data['seller_comment']);
        }
        // ensure the json data is a string
        if (data['offer_id'] && !(typeof data['offer_id'] === 'string' || data['offer_id'] instanceof String)) {
            throw new Error("Expected the field `offer_id` to be a primitive type in the JSON string but got " + data['offer_id']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['last_name'] && !(typeof data['last_name'] === 'string' || data['last_name'] instanceof String)) {
            throw new Error("Expected the field `last_name` to be a primitive type in the JSON string but got " + data['last_name']);
        }
        // ensure the json data is a string
        if (data['first_name'] && !(typeof data['first_name'] === 'string' || data['first_name'] instanceof String)) {
            throw new Error("Expected the field `first_name` to be a primitive type in the JSON string but got " + data['first_name']);
        }
        // ensure the json data is a string
        if (data['patronymic'] && !(typeof data['patronymic'] === 'string' || data['patronymic'] instanceof String)) {
            throw new Error("Expected the field `patronymic` to be a primitive type in the JSON string but got " + data['patronymic']);
        }

        return true;
    }


}



/**
 * Идентификатор заявки.
 * @member {Number} id
 */
V1GetDiscountTaskListResponseTask.prototype['id'] = undefined;

/**
 * Дата создания заявки.
 * @member {Date} created_at
 */
V1GetDiscountTaskListResponseTask.prototype['created_at'] = undefined;

/**
 * Время окончания действия заявки.
 * @member {Date} end_at
 */
V1GetDiscountTaskListResponseTask.prototype['end_at'] = undefined;

/**
 * Время для изменения решения.
 * @member {Date} edited_till
 */
V1GetDiscountTaskListResponseTask.prototype['edited_till'] = undefined;

/**
 * Статус заявки.
 * @member {String} status
 */
V1GetDiscountTaskListResponseTask.prototype['status'] = undefined;

/**
 * Имя покупателя.
 * @member {String} customer_name
 */
V1GetDiscountTaskListResponseTask.prototype['customer_name'] = undefined;

/**
 * Идентификатор товара в системе Ozon — SKU.
 * @member {Number} sku
 */
V1GetDiscountTaskListResponseTask.prototype['sku'] = undefined;

/**
 * Комментарий покупателя к заявке.
 * @member {String} user_comment
 */
V1GetDiscountTaskListResponseTask.prototype['user_comment'] = undefined;

/**
 * Комментарий продавца к заявке.
 * @member {String} seller_comment
 */
V1GetDiscountTaskListResponseTask.prototype['seller_comment'] = undefined;

/**
 * Цена по заявке.
 * @member {Number} requested_price
 */
V1GetDiscountTaskListResponseTask.prototype['requested_price'] = undefined;

/**
 * Одобренная цена.
 * @member {Number} approved_price
 */
V1GetDiscountTaskListResponseTask.prototype['approved_price'] = undefined;

/**
 * Цена товара до всех скидок.
 * @member {Number} original_price
 */
V1GetDiscountTaskListResponseTask.prototype['original_price'] = undefined;

/**
 * Скидка в рублях.
 * @member {Number} discount
 */
V1GetDiscountTaskListResponseTask.prototype['discount'] = undefined;

/**
 * Скидка в процентах.
 * @member {Number} discount_percent
 */
V1GetDiscountTaskListResponseTask.prototype['discount_percent'] = undefined;

/**
 * Базовая цена, по которой товар продаётся на Ozon, если не участвует в акции.
 * @member {Number} base_price
 */
V1GetDiscountTaskListResponseTask.prototype['base_price'] = undefined;

/**
 * Минимальное значение цены после автоприменения скидок и акций.
 * @member {Number} min_auto_price
 */
V1GetDiscountTaskListResponseTask.prototype['min_auto_price'] = undefined;

/**
 * Идентификатор предыдущей заявки от покупателя по этому товару.
 * @member {Number} prev_task_id
 */
V1GetDiscountTaskListResponseTask.prototype['prev_task_id'] = undefined;

/**
 * Является ли товар уценённым. `true`, если уценённый.
 * @member {Boolean} is_damaged
 */
V1GetDiscountTaskListResponseTask.prototype['is_damaged'] = undefined;

/**
 * Дата модерации: просмотра, одобрения или отклонения заявки. 
 * @member {Date} moderated_at
 */
V1GetDiscountTaskListResponseTask.prototype['moderated_at'] = undefined;

/**
 * Скидка в рублях, которую одобрил продавец. Передайте значение `0`, если продавец не одобрял заявку.
 * @member {Number} approved_discount
 */
V1GetDiscountTaskListResponseTask.prototype['approved_discount'] = undefined;

/**
 * Скидка в процентах, которую одобрил продавец. Передайте значение `0`, если продавец не одобрял заявку.
 * @member {Number} approved_discount_percent
 */
V1GetDiscountTaskListResponseTask.prototype['approved_discount_percent'] = undefined;

/**
 * Покупал ли пользователь товар. `true`, если покупал.
 * @member {Boolean} is_purchased
 */
V1GetDiscountTaskListResponseTask.prototype['is_purchased'] = undefined;

/**
 * Была ли заявка промодерирована автоматически. `true`, если модерация была автоматической.
 * @member {Boolean} is_auto_moderated
 */
V1GetDiscountTaskListResponseTask.prototype['is_auto_moderated'] = undefined;

/**
 * Артикул товара.
 * @member {String} offer_id
 */
V1GetDiscountTaskListResponseTask.prototype['offer_id'] = undefined;

/**
 * Электронный адрес сотрудника продавца, который обработал заявку.
 * @member {String} email
 */
V1GetDiscountTaskListResponseTask.prototype['email'] = undefined;

/**
 * Фамилия сотрудника продавца, который обработал заявку.
 * @member {String} last_name
 */
V1GetDiscountTaskListResponseTask.prototype['last_name'] = undefined;

/**
 * Имя сотрудника продавца, который обработал заявку.
 * @member {String} first_name
 */
V1GetDiscountTaskListResponseTask.prototype['first_name'] = undefined;

/**
 * Отчество сотрудника продавца, который обработал заявку.
 * @member {String} patronymic
 */
V1GetDiscountTaskListResponseTask.prototype['patronymic'] = undefined;

/**
 * Минимальное одобренное количество товаров.
 * @member {Number} approved_quantity_min
 */
V1GetDiscountTaskListResponseTask.prototype['approved_quantity_min'] = undefined;

/**
 * Максимальное одобренное количество товаров.
 * @member {Number} approved_quantity_max
 */
V1GetDiscountTaskListResponseTask.prototype['approved_quantity_max'] = undefined;

/**
 * Запрошенное минимальное количество товаров.
 * @member {Number} requested_quantity_min
 */
V1GetDiscountTaskListResponseTask.prototype['requested_quantity_min'] = undefined;

/**
 * Запрошенное максимальное количество товаров.
 * @member {Number} requested_quantity_max
 */
V1GetDiscountTaskListResponseTask.prototype['requested_quantity_max'] = undefined;

/**
 * Цена по заявке c региональной наценкой.
 * @member {Number} requested_price_with_fee
 */
V1GetDiscountTaskListResponseTask.prototype['requested_price_with_fee'] = undefined;

/**
 * Одобренная цена с региональной наценкой.
 * @member {Number} approved_price_with_fee
 */
V1GetDiscountTaskListResponseTask.prototype['approved_price_with_fee'] = undefined;

/**
 * Региональная наценка в процентах.
 * @member {Number} approved_price_fee_percent
 */
V1GetDiscountTaskListResponseTask.prototype['approved_price_fee_percent'] = undefined;






export default V1GetDiscountTaskListResponseTask;

