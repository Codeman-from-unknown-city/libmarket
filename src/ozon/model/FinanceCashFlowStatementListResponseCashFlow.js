/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import V3FinanceCashFlowStatementListResponsePeriod from './V3FinanceCashFlowStatementListResponsePeriod';

/**
 * The FinanceCashFlowStatementListResponseCashFlow model module.
 * @module model/FinanceCashFlowStatementListResponseCashFlow
 * @version 2.1
 */
class FinanceCashFlowStatementListResponseCashFlow {
    /**
     * Constructs a new <code>FinanceCashFlowStatementListResponseCashFlow</code>.
     * @alias module:model/FinanceCashFlowStatementListResponseCashFlow
     */
    constructor() { 
        
        FinanceCashFlowStatementListResponseCashFlow.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FinanceCashFlowStatementListResponseCashFlow</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FinanceCashFlowStatementListResponseCashFlow} obj Optional instance to populate.
     * @return {module:model/FinanceCashFlowStatementListResponseCashFlow} The populated <code>FinanceCashFlowStatementListResponseCashFlow</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FinanceCashFlowStatementListResponseCashFlow();

            if (data.hasOwnProperty('period')) {
                obj['period'] = V3FinanceCashFlowStatementListResponsePeriod.constructFromObject(data['period']);
            }
            if (data.hasOwnProperty('orders_amount')) {
                obj['orders_amount'] = ApiClient.convertToType(data['orders_amount'], 'Number');
            }
            if (data.hasOwnProperty('returns_amount')) {
                obj['returns_amount'] = ApiClient.convertToType(data['returns_amount'], 'Number');
            }
            if (data.hasOwnProperty('commission_amount')) {
                obj['commission_amount'] = ApiClient.convertToType(data['commission_amount'], 'Number');
            }
            if (data.hasOwnProperty('services_amount')) {
                obj['services_amount'] = ApiClient.convertToType(data['services_amount'], 'Number');
            }
            if (data.hasOwnProperty('item_delivery_and_return_amount')) {
                obj['item_delivery_and_return_amount'] = ApiClient.convertToType(data['item_delivery_and_return_amount'], 'Number');
            }
            if (data.hasOwnProperty('currency_code')) {
                obj['currency_code'] = ApiClient.convertToType(data['currency_code'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FinanceCashFlowStatementListResponseCashFlow</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FinanceCashFlowStatementListResponseCashFlow</code>.
     */
    static validateJSON(data) {
        // validate the optional field `period`
        if (data['period']) { // data not null
          V3FinanceCashFlowStatementListResponsePeriod.validateJSON(data['period']);
        }
        // ensure the json data is a string
        if (data['currency_code'] && !(typeof data['currency_code'] === 'string' || data['currency_code'] instanceof String)) {
            throw new Error("Expected the field `currency_code` to be a primitive type in the JSON string but got " + data['currency_code']);
        }

        return true;
    }


}



/**
 * @member {module:model/V3FinanceCashFlowStatementListResponsePeriod} period
 */
FinanceCashFlowStatementListResponseCashFlow.prototype['period'] = undefined;

/**
 * Сумма цен реализованных товаров.
 * @member {Number} orders_amount
 */
FinanceCashFlowStatementListResponseCashFlow.prototype['orders_amount'] = undefined;

/**
 * Сумма цен возвращённых товаров.
 * @member {Number} returns_amount
 */
FinanceCashFlowStatementListResponseCashFlow.prototype['returns_amount'] = undefined;

/**
 * Комиссия Ozon за реализацию товаров.
 * @member {Number} commission_amount
 */
FinanceCashFlowStatementListResponseCashFlow.prototype['commission_amount'] = undefined;

/**
 * Сумма дополнительных услуг.
 * @member {Number} services_amount
 */
FinanceCashFlowStatementListResponseCashFlow.prototype['services_amount'] = undefined;

/**
 * Сумма услуг логистики.
 * @member {Number} item_delivery_and_return_amount
 */
FinanceCashFlowStatementListResponseCashFlow.prototype['item_delivery_and_return_amount'] = undefined;

/**
 * Код валюты, в которой рассчитываются комиссии.
 * @member {String} currency_code
 */
FinanceCashFlowStatementListResponseCashFlow.prototype['currency_code'] = undefined;






export default FinanceCashFlowStatementListResponseCashFlow;

