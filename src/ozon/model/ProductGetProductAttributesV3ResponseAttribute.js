/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProductGetProductAttributesV3ResponseDictionaryValue from './ProductGetProductAttributesV3ResponseDictionaryValue';

/**
 * The ProductGetProductAttributesV3ResponseAttribute model module.
 * @module model/ProductGetProductAttributesV3ResponseAttribute
 * @version 2.1
 */
class ProductGetProductAttributesV3ResponseAttribute {
    /**
     * Constructs a new <code>ProductGetProductAttributesV3ResponseAttribute</code>.
     * @alias module:model/ProductGetProductAttributesV3ResponseAttribute
     */
    constructor() { 
        
        ProductGetProductAttributesV3ResponseAttribute.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductGetProductAttributesV3ResponseAttribute</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductGetProductAttributesV3ResponseAttribute} obj Optional instance to populate.
     * @return {module:model/ProductGetProductAttributesV3ResponseAttribute} The populated <code>ProductGetProductAttributesV3ResponseAttribute</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductGetProductAttributesV3ResponseAttribute();

            if (data.hasOwnProperty('attribute_id')) {
                obj['attribute_id'] = ApiClient.convertToType(data['attribute_id'], 'Number');
            }
            if (data.hasOwnProperty('complex_id')) {
                obj['complex_id'] = ApiClient.convertToType(data['complex_id'], 'Number');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], [ProductGetProductAttributesV3ResponseDictionaryValue]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductGetProductAttributesV3ResponseAttribute</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductGetProductAttributesV3ResponseAttribute</code>.
     */
    static validateJSON(data) {
        if (data['values']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['values'])) {
                throw new Error("Expected the field `values` to be an array in the JSON data but got " + data['values']);
            }
            // validate the optional field `values` (array)
            for (const item of data['values']) {
                ProductGetProductAttributesV3ResponseDictionaryValue.validateJsonObject(item);
            };
        }

        return true;
    }


}



/**
 * Идентификатор характеристики.
 * @member {Number} attribute_id
 */
ProductGetProductAttributesV3ResponseAttribute.prototype['attribute_id'] = undefined;

/**
 * Идентификатор характеристики, которая поддерживает вложенные свойства. Например, у характеристики «Процессор» есть вложенные характеристики «Производитель» и «L2 Cache». У каждой из вложенных характеристик может быть несколько вариантов значений.
 * @member {Number} complex_id
 */
ProductGetProductAttributesV3ResponseAttribute.prototype['complex_id'] = undefined;

/**
 * Массив значений характеристик.
 * @member {Array.<module:model/ProductGetProductAttributesV3ResponseDictionaryValue>} values
 */
ProductGetProductAttributesV3ResponseAttribute.prototype['values'] = undefined;






export default ProductGetProductAttributesV3ResponseAttribute;

