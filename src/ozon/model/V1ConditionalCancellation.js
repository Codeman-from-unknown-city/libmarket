/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConditionalCancellationCancellationReason from './ConditionalCancellationCancellationReason';
import ConditionalCancellationState from './ConditionalCancellationState';

/**
 * The V1ConditionalCancellation model module.
 * @module model/V1ConditionalCancellation
 * @version 2.1
 */
class V1ConditionalCancellation {
    /**
     * Constructs a new <code>V1ConditionalCancellation</code>.
     * Результат запроса.
     * @alias module:model/V1ConditionalCancellation
     */
    constructor() { 
        
        V1ConditionalCancellation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>V1ConditionalCancellation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1ConditionalCancellation} obj Optional instance to populate.
     * @return {module:model/V1ConditionalCancellation} The populated <code>V1ConditionalCancellation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1ConditionalCancellation();

            if (data.hasOwnProperty('cancellation_id')) {
                obj['cancellation_id'] = ApiClient.convertToType(data['cancellation_id'], 'Number');
            }
            if (data.hasOwnProperty('posting_number')) {
                obj['posting_number'] = ApiClient.convertToType(data['posting_number'], 'String');
            }
            if (data.hasOwnProperty('cancellation_reason')) {
                obj['cancellation_reason'] = ConditionalCancellationCancellationReason.constructFromObject(data['cancellation_reason']);
            }
            if (data.hasOwnProperty('cancelled_at')) {
                obj['cancelled_at'] = ApiClient.convertToType(data['cancelled_at'], 'Date');
            }
            if (data.hasOwnProperty('cancellation_reason_message')) {
                obj['cancellation_reason_message'] = ApiClient.convertToType(data['cancellation_reason_message'], 'String');
            }
            if (data.hasOwnProperty('tpl_integration_type')) {
                obj['tpl_integration_type'] = ApiClient.convertToType(data['tpl_integration_type'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ConditionalCancellationState.constructFromObject(data['state']);
            }
            if (data.hasOwnProperty('cancellation_initiator')) {
                obj['cancellation_initiator'] = ApiClient.convertToType(data['cancellation_initiator'], 'String');
            }
            if (data.hasOwnProperty('order_date')) {
                obj['order_date'] = ApiClient.convertToType(data['order_date'], 'Date');
            }
            if (data.hasOwnProperty('approve_comment')) {
                obj['approve_comment'] = ApiClient.convertToType(data['approve_comment'], 'String');
            }
            if (data.hasOwnProperty('approve_date')) {
                obj['approve_date'] = ApiClient.convertToType(data['approve_date'], 'Date');
            }
            if (data.hasOwnProperty('auto_approve_date')) {
                obj['auto_approve_date'] = ApiClient.convertToType(data['auto_approve_date'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>V1ConditionalCancellation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>V1ConditionalCancellation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['posting_number'] && !(typeof data['posting_number'] === 'string' || data['posting_number'] instanceof String)) {
            throw new Error("Expected the field `posting_number` to be a primitive type in the JSON string but got " + data['posting_number']);
        }
        // validate the optional field `cancellation_reason`
        if (data['cancellation_reason']) { // data not null
          ConditionalCancellationCancellationReason.validateJSON(data['cancellation_reason']);
        }
        // ensure the json data is a string
        if (data['cancellation_reason_message'] && !(typeof data['cancellation_reason_message'] === 'string' || data['cancellation_reason_message'] instanceof String)) {
            throw new Error("Expected the field `cancellation_reason_message` to be a primitive type in the JSON string but got " + data['cancellation_reason_message']);
        }
        // ensure the json data is a string
        if (data['tpl_integration_type'] && !(typeof data['tpl_integration_type'] === 'string' || data['tpl_integration_type'] instanceof String)) {
            throw new Error("Expected the field `tpl_integration_type` to be a primitive type in the JSON string but got " + data['tpl_integration_type']);
        }
        // validate the optional field `state`
        if (data['state']) { // data not null
          ConditionalCancellationState.validateJSON(data['state']);
        }
        // ensure the json data is a string
        if (data['cancellation_initiator'] && !(typeof data['cancellation_initiator'] === 'string' || data['cancellation_initiator'] instanceof String)) {
            throw new Error("Expected the field `cancellation_initiator` to be a primitive type in the JSON string but got " + data['cancellation_initiator']);
        }
        // ensure the json data is a string
        if (data['approve_comment'] && !(typeof data['approve_comment'] === 'string' || data['approve_comment'] instanceof String)) {
            throw new Error("Expected the field `approve_comment` to be a primitive type in the JSON string but got " + data['approve_comment']);
        }

        return true;
    }


}



/**
 * Идентификатор заявки на отмену.
 * @member {Number} cancellation_id
 */
V1ConditionalCancellation.prototype['cancellation_id'] = undefined;

/**
 * Номер отправления.
 * @member {String} posting_number
 */
V1ConditionalCancellation.prototype['posting_number'] = undefined;

/**
 * @member {module:model/ConditionalCancellationCancellationReason} cancellation_reason
 */
V1ConditionalCancellation.prototype['cancellation_reason'] = undefined;

/**
 * Дата создания заявки на отмену.
 * @member {Date} cancelled_at
 */
V1ConditionalCancellation.prototype['cancelled_at'] = undefined;

/**
 * Комментарий к заявке на отмену, введённый инициатором отмены вручную.
 * @member {String} cancellation_reason_message
 */
V1ConditionalCancellation.prototype['cancellation_reason_message'] = undefined;

/**
 * Тип интеграции со службой доставки.
 * @member {String} tpl_integration_type
 */
V1ConditionalCancellation.prototype['tpl_integration_type'] = undefined;

/**
 * @member {module:model/ConditionalCancellationState} state
 */
V1ConditionalCancellation.prototype['state'] = undefined;

/**
 * Инициатор отмены: - `OZON` — Ozon,  - `SELLER` — продавец,  - `CLIENT` — покупатель,  - `SYSTEM` — система,  - `DELIVERY` — служба доставки. 
 * @member {module:model/V1ConditionalCancellation.CancellationInitiatorEnum} cancellation_initiator
 */
V1ConditionalCancellation.prototype['cancellation_initiator'] = undefined;

/**
 * Дата создания заказа.
 * @member {Date} order_date
 */
V1ConditionalCancellation.prototype['order_date'] = undefined;

/**
 * Комментарий, оставленный при подтверждении или отклонении заявки на отмену.
 * @member {String} approve_comment
 */
V1ConditionalCancellation.prototype['approve_comment'] = undefined;

/**
 * Дата подтверждения или отклонения заявки на отмену.
 * @member {Date} approve_date
 */
V1ConditionalCancellation.prototype['approve_date'] = undefined;

/**
 * Дата, после которой заявка будет автоматически подтверждена.
 * @member {Date} auto_approve_date
 */
V1ConditionalCancellation.prototype['auto_approve_date'] = undefined;





/**
 * Allowed values for the <code>cancellation_initiator</code> property.
 * @enum {String}
 * @readonly
 */
V1ConditionalCancellation['CancellationInitiatorEnum'] = {

    /**
     * value: "OZON"
     * @const
     */
    "OZON": "OZON",

    /**
     * value: "SELLER"
     * @const
     */
    "SELLER": "SELLER",

    /**
     * value: "CLIENT"
     * @const
     */
    "CLIENT": "CLIENT",

    /**
     * value: "SYSTEM"
     * @const
     */
    "SYSTEM": "SYSTEM",

    /**
     * value: "DELIVERY"
     * @const
     */
    "DELIVERY": "DELIVERY"
};



export default V1ConditionalCancellation;

