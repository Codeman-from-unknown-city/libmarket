/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResultGetReturnsCompanyFBSItem model module.
 * @module model/ResultGetReturnsCompanyFBSItem
 * @version 2.1
 */
class ResultGetReturnsCompanyFBSItem {
    /**
     * Constructs a new <code>ResultGetReturnsCompanyFBSItem</code>.
     * @alias module:model/ResultGetReturnsCompanyFBSItem
     */
    constructor() { 
        
        ResultGetReturnsCompanyFBSItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResultGetReturnsCompanyFBSItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResultGetReturnsCompanyFBSItem} obj Optional instance to populate.
     * @return {module:model/ResultGetReturnsCompanyFBSItem} The populated <code>ResultGetReturnsCompanyFBSItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResultGetReturnsCompanyFBSItem();

            if (data.hasOwnProperty('accepted_from_customer_moment')) {
                obj['accepted_from_customer_moment'] = ApiClient.convertToType(data['accepted_from_customer_moment'], 'String');
            }
            if (data.hasOwnProperty('clearing_id')) {
                obj['clearing_id'] = ApiClient.convertToType(data['clearing_id'], 'Number');
            }
            if (data.hasOwnProperty('commission')) {
                obj['commission'] = ApiClient.convertToType(data['commission'], 'Number');
            }
            if (data.hasOwnProperty('commission_percent')) {
                obj['commission_percent'] = ApiClient.convertToType(data['commission_percent'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('is_moving')) {
                obj['is_moving'] = ApiClient.convertToType(data['is_moving'], 'Boolean');
            }
            if (data.hasOwnProperty('is_opened')) {
                obj['is_opened'] = ApiClient.convertToType(data['is_opened'], 'Boolean');
            }
            if (data.hasOwnProperty('last_free_waiting_day')) {
                obj['last_free_waiting_day'] = ApiClient.convertToType(data['last_free_waiting_day'], 'String');
            }
            if (data.hasOwnProperty('place_id')) {
                obj['place_id'] = ApiClient.convertToType(data['place_id'], 'Number');
            }
            if (data.hasOwnProperty('moving_to_place_name')) {
                obj['moving_to_place_name'] = ApiClient.convertToType(data['moving_to_place_name'], 'String');
            }
            if (data.hasOwnProperty('picking_amount')) {
                obj['picking_amount'] = ApiClient.convertToType(data['picking_amount'], 'Number');
            }
            if (data.hasOwnProperty('posting_number')) {
                obj['posting_number'] = ApiClient.convertToType(data['posting_number'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('price_without_commission')) {
                obj['price_without_commission'] = ApiClient.convertToType(data['price_without_commission'], 'Number');
            }
            if (data.hasOwnProperty('product_id')) {
                obj['product_id'] = ApiClient.convertToType(data['product_id'], 'Number');
            }
            if (data.hasOwnProperty('product_name')) {
                obj['product_name'] = ApiClient.convertToType(data['product_name'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('return_date')) {
                obj['return_date'] = ApiClient.convertToType(data['return_date'], 'String');
            }
            if (data.hasOwnProperty('return_reason_name')) {
                obj['return_reason_name'] = ApiClient.convertToType(data['return_reason_name'], 'String');
            }
            if (data.hasOwnProperty('waiting_for_seller_date_time')) {
                obj['waiting_for_seller_date_time'] = ApiClient.convertToType(data['waiting_for_seller_date_time'], 'String');
            }
            if (data.hasOwnProperty('returned_to_seller_date_time')) {
                obj['returned_to_seller_date_time'] = ApiClient.convertToType(data['returned_to_seller_date_time'], 'String');
            }
            if (data.hasOwnProperty('waiting_for_seller_days')) {
                obj['waiting_for_seller_days'] = ApiClient.convertToType(data['waiting_for_seller_days'], 'Number');
            }
            if (data.hasOwnProperty('returns_keeping_cost')) {
                obj['returns_keeping_cost'] = ApiClient.convertToType(data['returns_keeping_cost'], 'Number');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResultGetReturnsCompanyFBSItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResultGetReturnsCompanyFBSItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accepted_from_customer_moment'] && !(typeof data['accepted_from_customer_moment'] === 'string' || data['accepted_from_customer_moment'] instanceof String)) {
            throw new Error("Expected the field `accepted_from_customer_moment` to be a primitive type in the JSON string but got " + data['accepted_from_customer_moment']);
        }
        // ensure the json data is a string
        if (data['last_free_waiting_day'] && !(typeof data['last_free_waiting_day'] === 'string' || data['last_free_waiting_day'] instanceof String)) {
            throw new Error("Expected the field `last_free_waiting_day` to be a primitive type in the JSON string but got " + data['last_free_waiting_day']);
        }
        // ensure the json data is a string
        if (data['moving_to_place_name'] && !(typeof data['moving_to_place_name'] === 'string' || data['moving_to_place_name'] instanceof String)) {
            throw new Error("Expected the field `moving_to_place_name` to be a primitive type in the JSON string but got " + data['moving_to_place_name']);
        }
        // ensure the json data is a string
        if (data['posting_number'] && !(typeof data['posting_number'] === 'string' || data['posting_number'] instanceof String)) {
            throw new Error("Expected the field `posting_number` to be a primitive type in the JSON string but got " + data['posting_number']);
        }
        // ensure the json data is a string
        if (data['product_name'] && !(typeof data['product_name'] === 'string' || data['product_name'] instanceof String)) {
            throw new Error("Expected the field `product_name` to be a primitive type in the JSON string but got " + data['product_name']);
        }
        // ensure the json data is a string
        if (data['return_date'] && !(typeof data['return_date'] === 'string' || data['return_date'] instanceof String)) {
            throw new Error("Expected the field `return_date` to be a primitive type in the JSON string but got " + data['return_date']);
        }
        // ensure the json data is a string
        if (data['return_reason_name'] && !(typeof data['return_reason_name'] === 'string' || data['return_reason_name'] instanceof String)) {
            throw new Error("Expected the field `return_reason_name` to be a primitive type in the JSON string but got " + data['return_reason_name']);
        }
        // ensure the json data is a string
        if (data['waiting_for_seller_date_time'] && !(typeof data['waiting_for_seller_date_time'] === 'string' || data['waiting_for_seller_date_time'] instanceof String)) {
            throw new Error("Expected the field `waiting_for_seller_date_time` to be a primitive type in the JSON string but got " + data['waiting_for_seller_date_time']);
        }
        // ensure the json data is a string
        if (data['returned_to_seller_date_time'] && !(typeof data['returned_to_seller_date_time'] === 'string' || data['returned_to_seller_date_time'] instanceof String)) {
            throw new Error("Expected the field `returned_to_seller_date_time` to be a primitive type in the JSON string but got " + data['returned_to_seller_date_time']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * Время приёма возврата от покупателя.
 * @member {String} accepted_from_customer_moment
 */
ResultGetReturnsCompanyFBSItem.prototype['accepted_from_customer_moment'] = undefined;

/**
 * Нижний штрихкод на этикетке товара.
 * @member {Number} clearing_id
 */
ResultGetReturnsCompanyFBSItem.prototype['clearing_id'] = undefined;

/**
 * Комиссия.
 * @member {Number} commission
 */
ResultGetReturnsCompanyFBSItem.prototype['commission'] = undefined;

/**
 * Процент комиссии.
 * @member {Number} commission_percent
 */
ResultGetReturnsCompanyFBSItem.prototype['commission_percent'] = undefined;

/**
 * Идентификатор возврата.
 * @member {Number} id
 */
ResultGetReturnsCompanyFBSItem.prototype['id'] = undefined;

/**
 * Если товар в пути — `true`.
 * @member {Boolean} is_moving
 */
ResultGetReturnsCompanyFBSItem.prototype['is_moving'] = undefined;

/**
 * Признак вскрытия упаковки. `true`, если упаковка вскрыта.
 * @member {Boolean} is_opened
 */
ResultGetReturnsCompanyFBSItem.prototype['is_opened'] = undefined;

/**
 * Последний день бесплатного хранения.
 * @member {String} last_free_waiting_day
 */
ResultGetReturnsCompanyFBSItem.prototype['last_free_waiting_day'] = undefined;

/**
 * Идентификатор склада, в который везут товар.
 * @member {Number} place_id
 */
ResultGetReturnsCompanyFBSItem.prototype['place_id'] = undefined;

/**
 * Название склада, в который везут товар.
 * @member {String} moving_to_place_name
 */
ResultGetReturnsCompanyFBSItem.prototype['moving_to_place_name'] = undefined;

/**
 * Стоимость доставки.
 * @member {Number} picking_amount
 */
ResultGetReturnsCompanyFBSItem.prototype['picking_amount'] = undefined;

/**
 * Номер отправления.
 * @member {String} posting_number
 */
ResultGetReturnsCompanyFBSItem.prototype['posting_number'] = undefined;

/**
 * Текущая цена товара без скидки.
 * @member {Number} price
 */
ResultGetReturnsCompanyFBSItem.prototype['price'] = undefined;

/**
 * Стоимость товара без учёта комиссии.
 * @member {Number} price_without_commission
 */
ResultGetReturnsCompanyFBSItem.prototype['price_without_commission'] = undefined;

/**
 * Идентификатор товара.
 * @member {Number} product_id
 */
ResultGetReturnsCompanyFBSItem.prototype['product_id'] = undefined;

/**
 * Наименование товара.
 * @member {String} product_name
 */
ResultGetReturnsCompanyFBSItem.prototype['product_name'] = undefined;

/**
 * Количество товара.
 * @member {Number} quantity
 */
ResultGetReturnsCompanyFBSItem.prototype['quantity'] = undefined;

/**
 * Дата возврата товара.
 * @member {String} return_date
 */
ResultGetReturnsCompanyFBSItem.prototype['return_date'] = undefined;

/**
 * Причина возврата.
 * @member {String} return_reason_name
 */
ResultGetReturnsCompanyFBSItem.prototype['return_reason_name'] = undefined;

/**
 * Дата готовности выдачи товара продавцу.
 * @member {String} waiting_for_seller_date_time
 */
ResultGetReturnsCompanyFBSItem.prototype['waiting_for_seller_date_time'] = undefined;

/**
 * Дата выдачи товара продавцу.
 * @member {String} returned_to_seller_date_time
 */
ResultGetReturnsCompanyFBSItem.prototype['returned_to_seller_date_time'] = undefined;

/**
 * Срок хранения возврата в днях.
 * @member {Number} waiting_for_seller_days
 */
ResultGetReturnsCompanyFBSItem.prototype['waiting_for_seller_days'] = undefined;

/**
 * Стоимость хранения возврата.
 * @member {Number} returns_keeping_cost
 */
ResultGetReturnsCompanyFBSItem.prototype['returns_keeping_cost'] = undefined;

/**
 * Идентификатор товара на Ozon.
 * @member {Number} sku
 */
ResultGetReturnsCompanyFBSItem.prototype['sku'] = undefined;

/**
 * Статус возврата.
 * @member {String} status
 */
ResultGetReturnsCompanyFBSItem.prototype['status'] = undefined;






export default ResultGetReturnsCompanyFBSItem;

