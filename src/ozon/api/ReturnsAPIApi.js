/**
 * Документация Ozon Seller API
 * По вопросам работы с Seller API, обращайтесь в поддержку через личный кабинет.  > [Инструкции по работе с маркетплейсом](https://seller-edu.ozon.ru) 
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ReturnsGetReturnsCompanyFBSRequest from '../model/ReturnsGetReturnsCompanyFBSRequest';
import ReturnsGetReturnsCompanyFBSResponse from '../model/ReturnsGetReturnsCompanyFBSResponse';
import ReturnsGetReturnsCompanyFboRequest from '../model/ReturnsGetReturnsCompanyFboRequest';
import ReturnsGetReturnsCompanyFboResponse from '../model/ReturnsGetReturnsCompanyFboResponse';
import RpcStatus from '../model/RpcStatus';
import V3GetReturnsCompanyFboV3Request from '../model/V3GetReturnsCompanyFboV3Request';
import V3GetReturnsCompanyFboV3Response from '../model/V3GetReturnsCompanyFboV3Response';

/**
* ReturnsAPI service.
* @module api/ReturnsAPIApi
* @version 2.1
*/
export default class ReturnsAPIApi {

    /**
    * Constructs a new ReturnsAPIApi. 
    * @alias module:api/ReturnsAPIApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the returnsAPIGetReturnsCompanyFBS operation.
     * @callback module:api/ReturnsAPIApi~returnsAPIGetReturnsCompanyFBSCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReturnsGetReturnsCompanyFBSResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Получить информацию о возвратах FBS
     * Метод для получения информации о возвращённых товарах, которые продаются со склада продавца.
     * @param {String} clientId Идентификатор клиента.
     * @param {String} apiKey API-ключ.
     * @param {module:model/ReturnsGetReturnsCompanyFBSRequest} returnsGetReturnsCompanyFBSRequest 
     * @param {module:api/ReturnsAPIApi~returnsAPIGetReturnsCompanyFBSCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReturnsGetReturnsCompanyFBSResponse}
     */
    returnsAPIGetReturnsCompanyFBS(clientId, apiKey, returnsGetReturnsCompanyFBSRequest, callback) {
      let postBody = returnsGetReturnsCompanyFBSRequest;
      // verify the required parameter 'clientId' is set
      if (clientId === undefined || clientId === null) {
        throw new Error("Missing the required parameter 'clientId' when calling returnsAPIGetReturnsCompanyFBS");
      }
      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling returnsAPIGetReturnsCompanyFBS");
      }
      // verify the required parameter 'returnsGetReturnsCompanyFBSRequest' is set
      if (returnsGetReturnsCompanyFBSRequest === undefined || returnsGetReturnsCompanyFBSRequest === null) {
        throw new Error("Missing the required parameter 'returnsGetReturnsCompanyFBSRequest' when calling returnsAPIGetReturnsCompanyFBS");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Client-Id': clientId,
        'Api-Key': apiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ReturnsGetReturnsCompanyFBSResponse;
      return this.apiClient.callApi(
        '/v2/returns/company/fbs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the returnsAPIGetReturnsCompanyFbo operation.
     * @callback module:api/ReturnsAPIApi~returnsAPIGetReturnsCompanyFboCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReturnsGetReturnsCompanyFboResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Получить информацию о возвратах FBO
     * Метод для получения информации о возвращённых товарах, которые продаются со склада Ozon.
     * @param {String} clientId Идентификатор клиента.
     * @param {String} apiKey API-ключ.
     * @param {module:model/ReturnsGetReturnsCompanyFboRequest} returnsGetReturnsCompanyFboRequest 
     * @param {module:api/ReturnsAPIApi~returnsAPIGetReturnsCompanyFboCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReturnsGetReturnsCompanyFboResponse}
     */
    returnsAPIGetReturnsCompanyFbo(clientId, apiKey, returnsGetReturnsCompanyFboRequest, callback) {
      let postBody = returnsGetReturnsCompanyFboRequest;
      // verify the required parameter 'clientId' is set
      if (clientId === undefined || clientId === null) {
        throw new Error("Missing the required parameter 'clientId' when calling returnsAPIGetReturnsCompanyFbo");
      }
      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling returnsAPIGetReturnsCompanyFbo");
      }
      // verify the required parameter 'returnsGetReturnsCompanyFboRequest' is set
      if (returnsGetReturnsCompanyFboRequest === undefined || returnsGetReturnsCompanyFboRequest === null) {
        throw new Error("Missing the required parameter 'returnsGetReturnsCompanyFboRequest' when calling returnsAPIGetReturnsCompanyFbo");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Client-Id': clientId,
        'Api-Key': apiKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ReturnsGetReturnsCompanyFboResponse;
      return this.apiClient.callApi(
        '/v2/returns/company/fbo', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the returnsAPIGetReturnsCompanyFbo_0 operation.
     * @callback module:api/ReturnsAPIApi~returnsAPIGetReturnsCompanyFbo_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/V3GetReturnsCompanyFboV3Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Получить информацию о возвратах FBO (версия 3)
     * Метод для получения информации о возвращённых товарах, которые продаются со склада Ozon.
     * @param {module:model/V3GetReturnsCompanyFboV3Request} v3GetReturnsCompanyFboV3Request 
     * @param {module:api/ReturnsAPIApi~returnsAPIGetReturnsCompanyFbo_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V3GetReturnsCompanyFboV3Response}
     */
    returnsAPIGetReturnsCompanyFbo_0(v3GetReturnsCompanyFboV3Request, callback) {
      let postBody = v3GetReturnsCompanyFboV3Request;
      // verify the required parameter 'v3GetReturnsCompanyFboV3Request' is set
      if (v3GetReturnsCompanyFboV3Request === undefined || v3GetReturnsCompanyFboV3Request === null) {
        throw new Error("Missing the required parameter 'v3GetReturnsCompanyFboV3Request' when calling returnsAPIGetReturnsCompanyFbo_0");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = V3GetReturnsCompanyFboV3Response;
      return this.apiClient.callApi(
        '/v3/returns/company/fbo', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
