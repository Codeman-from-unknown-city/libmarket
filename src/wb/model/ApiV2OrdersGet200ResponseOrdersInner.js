/**
 * API продавца
 * # Общее описание <style> .version {   border: 0.1rem #b3b3b3 solid;   background-color: #F9F9F9;   color: #32329FE6;   height: 25px;   width: 150px;   text-align: center }, </style> <style> .warning {   border: 1.6rem #b3b3b3 solid;   background-color: #F9F9F9;   color: #247706;   text-align: center } </style>  Wildberries API предоставляет продавцам возможность управления магазином и получения оперативной и статистической информации по протоколу HTTP RestAPI. <br> Описание API предоставляется в формате [Swagger](https://swagger.io/) (Open API) и может быть использовано для импорта в другие инструменты (такие как PostMan) или генерации клиентского кода на различных языках программирования с помощью [Swagger CodeGen](https://swagger.io/tools/swagger-codegen/)  <ul> <li> Описание в оригинальном swagger-формате <a href=\"/swagger\">swagger</a> <li> OpenAPI-файл <a href=\"/swagger.yaml\">swagger.yaml</a> </ul>  <br> Для ручной проверки API вы можете использовать: <ul> <li> Под ОС Windows - [PostMan](https://www.postman.com/) <li> Под ОС Linux - [curl](https://curl.se/)  </ul>  ## Поддержка <br> Техническая поддержка осуществляется через обращения в личном кабинете продавца. При создании нового обращения в техподдержку используйте категорию API. <br> Новости и изменения, касающиеся API, публикуются в [новостной ленте Wildberries](https://seller.wildberries.ru/news). <br> Также готовятся к публикации Release Notes по API на сайте.  После их выхода будет сделан соответствующий анонс.   ## Авторизация Авторизация осуществляется по ключам API, которые  владелец личного кабинета (главный пользователь) самостоятельно  генерирует в разделе   [Профиль --> Настройки --> Доступ к новому API](https://seller.wildberries.ru/supplier-settings/access-to-new-api). <br>Обратите внимание, что ключ отображается ТОЛЬКО в момент создания. Его надо сохранить, потому что больше его отобразить будет нельзя. <br>Созданный ключ следует добавлять в каждый запрос, прибавляя к запросу заголовок (http-header) формата `Authorization: .........`. <br> <br>Внимание! Изменился домен для методов статистики, актуальный: https://statistics-api.wildberries.ru ## Форматы ### Дата и время Во всех методах API статистики дата и время передаются в формате [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).  <br> В большинстве случаев вы можете передать дату или дату со временем. Если время не указано, оно принимается равным 00:00:00. Время можно указывать с точностью до секунд или миллисекунд.  Литера `Z` в конце строки означает часовой пояс UTC. При ее отсутствии время считается в часовом поясе МСК (UTC+3). <br> Примеры: <ul> <li> `2019-06-20` <li> `2019-06-20T00:00:00Z` <li> `2019-06-20T23:59:59` <li> `2019-06-20T00:00:00.12345Z` <li> `2019-06-20T00:00:00.12345` <li> `2017-03-25T00:00:00` </ul> ## Release Notes #### 2022.12.21 v1.6 Добавлена инструкция по загрузке статистики в Excel #### 2022.12.15 v1.5  Новая авторизация для методов API статистики 2022.12.15 в v1.5: #### 2022.10.31 v1.4  Метод будет отключен 2022.10.31 в v1.4: <ul> <li> `/content/v1/cards/list` </ul>  #### 2022.09.20 v1.2  В связи с переходом на новое API Контента старые методы будут отключены. К их числу относятся: <ul> <li> `/card/_*` <li> `/api/v1/config/_*` <li> `/api/v1/directory/_*` </ul> Данные методы теперь возвращают код 404.  Новое API Контента описано в данном документе в разделах Контент / * 
 *
 * The version of the OpenAPI document: 1.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../../ApiClient';
import DeliveryAddressDetails from './DeliveryAddressDetails';
import UserInfo from './UserInfo';

/**
 * The ApiV2OrdersGet200ResponseOrdersInner model module.
 * @module model/ApiV2OrdersGet200ResponseOrdersInner
 * @version 1.6
 */
class ApiV2OrdersGet200ResponseOrdersInner {
    /**
     * Constructs a new <code>ApiV2OrdersGet200ResponseOrdersInner</code>.
     * @alias module:model/ApiV2OrdersGet200ResponseOrdersInner
     */
    constructor() { 
        
        ApiV2OrdersGet200ResponseOrdersInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiV2OrdersGet200ResponseOrdersInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiV2OrdersGet200ResponseOrdersInner} obj Optional instance to populate.
     * @return {module:model/ApiV2OrdersGet200ResponseOrdersInner} The populated <code>ApiV2OrdersGet200ResponseOrdersInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiV2OrdersGet200ResponseOrdersInner();

            if (data.hasOwnProperty('orderId')) {
                obj['orderId'] = ApiClient.convertToType(data['orderId'], 'String');
            }
            if (data.hasOwnProperty('dateCreated')) {
                obj['dateCreated'] = ApiClient.convertToType(data['dateCreated'], 'String');
            }
            if (data.hasOwnProperty('wbWhId')) {
                obj['wbWhId'] = ApiClient.convertToType(data['wbWhId'], 'Number');
            }
            if (data.hasOwnProperty('storeId')) {
                obj['storeId'] = ApiClient.convertToType(data['storeId'], 'Number');
            }
            if (data.hasOwnProperty('pid')) {
                obj['pid'] = ApiClient.convertToType(data['pid'], 'Number');
            }
            if (data.hasOwnProperty('officeAddress')) {
                obj['officeAddress'] = ApiClient.convertToType(data['officeAddress'], 'String');
            }
            if (data.hasOwnProperty('OfficeLatitude')) {
                obj['OfficeLatitude'] = ApiClient.convertToType(data['OfficeLatitude'], 'Number');
            }
            if (data.hasOwnProperty('OfficeLongitude')) {
                obj['OfficeLongitude'] = ApiClient.convertToType(data['OfficeLongitude'], 'Number');
            }
            if (data.hasOwnProperty('deliveryAddress')) {
                obj['deliveryAddress'] = ApiClient.convertToType(data['deliveryAddress'], 'String');
            }
            if (data.hasOwnProperty('deliveryAddressDetails')) {
                obj['deliveryAddressDetails'] = DeliveryAddressDetails.constructFromObject(data['deliveryAddressDetails']);
            }
            if (data.hasOwnProperty('userInfo')) {
                obj['userInfo'] = UserInfo.constructFromObject(data['userInfo']);
            }
            if (data.hasOwnProperty('chrtId')) {
                obj['chrtId'] = ApiClient.convertToType(data['chrtId'], 'Number');
            }
            if (data.hasOwnProperty('barcode')) {
                obj['barcode'] = ApiClient.convertToType(data['barcode'], 'String');
            }
            if (data.hasOwnProperty('barcodes')) {
                obj['barcodes'] = ApiClient.convertToType(data['barcodes'], ['String']);
            }
            if (data.hasOwnProperty('scOfficesNames')) {
                obj['scOfficesNames'] = ApiClient.convertToType(data['scOfficesNames'], ['String']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'Number');
            }
            if (data.hasOwnProperty('userStatus')) {
                obj['userStatus'] = ApiClient.convertToType(data['userStatus'], 'Number');
            }
            if (data.hasOwnProperty('rid')) {
                obj['rid'] = ApiClient.convertToType(data['rid'], 'String');
            }
            if (data.hasOwnProperty('totalPrice')) {
                obj['totalPrice'] = ApiClient.convertToType(data['totalPrice'], 'Number');
            }
            if (data.hasOwnProperty('currencyCode')) {
                obj['currencyCode'] = ApiClient.convertToType(data['currencyCode'], 'Number');
            }
            if (data.hasOwnProperty('orderUID')) {
                obj['orderUID'] = ApiClient.convertToType(data['orderUID'], 'String');
            }
            if (data.hasOwnProperty('deliveryType')) {
                obj['deliveryType'] = ApiClient.convertToType(data['deliveryType'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiV2OrdersGet200ResponseOrdersInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiV2OrdersGet200ResponseOrdersInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['orderId'] && !(typeof data['orderId'] === 'string' || data['orderId'] instanceof String)) {
            throw new Error("Expected the field `orderId` to be a primitive type in the JSON string but got " + data['orderId']);
        }
        // ensure the json data is a string
        if (data['dateCreated'] && !(typeof data['dateCreated'] === 'string' || data['dateCreated'] instanceof String)) {
            throw new Error("Expected the field `dateCreated` to be a primitive type in the JSON string but got " + data['dateCreated']);
        }
        // ensure the json data is a string
        if (data['officeAddress'] && !(typeof data['officeAddress'] === 'string' || data['officeAddress'] instanceof String)) {
            throw new Error("Expected the field `officeAddress` to be a primitive type in the JSON string but got " + data['officeAddress']);
        }
        // ensure the json data is a string
        if (data['deliveryAddress'] && !(typeof data['deliveryAddress'] === 'string' || data['deliveryAddress'] instanceof String)) {
            throw new Error("Expected the field `deliveryAddress` to be a primitive type in the JSON string but got " + data['deliveryAddress']);
        }
        // validate the optional field `deliveryAddressDetails`
        if (data['deliveryAddressDetails']) { // data not null
          DeliveryAddressDetails.validateJSON(data['deliveryAddressDetails']);
        }
        // validate the optional field `userInfo`
        if (data['userInfo']) { // data not null
          UserInfo.validateJSON(data['userInfo']);
        }
        // ensure the json data is a string
        if (data['barcode'] && !(typeof data['barcode'] === 'string' || data['barcode'] instanceof String)) {
            throw new Error("Expected the field `barcode` to be a primitive type in the JSON string but got " + data['barcode']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['barcodes'])) {
            throw new Error("Expected the field `barcodes` to be an array in the JSON data but got " + data['barcodes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['scOfficesNames'])) {
            throw new Error("Expected the field `scOfficesNames` to be an array in the JSON data but got " + data['scOfficesNames']);
        }
        // ensure the json data is a string
        if (data['rid'] && !(typeof data['rid'] === 'string' || data['rid'] instanceof String)) {
            throw new Error("Expected the field `rid` to be a primitive type in the JSON string but got " + data['rid']);
        }
        // ensure the json data is a string
        if (data['orderUID'] && !(typeof data['orderUID'] === 'string' || data['orderUID'] instanceof String)) {
            throw new Error("Expected the field `orderUID` to be a primitive type in the JSON string but got " + data['orderUID']);
        }

        return true;
    }


}



/**
 * Идентификатор заказа.
 * @member {String} orderId
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['orderId'] = undefined;

/**
 * Дата создания заказа (`RFC3339`).
 * @member {String} dateCreated
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['dateCreated'] = undefined;

/**
 * Идентификатор склада WB, на которой заказ должен быть доставлен.
 * @member {Number} wbWhId
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['wbWhId'] = undefined;

/**
 * Идентификатор склада поставщика, на который пришел заказ.
 * @member {Number} storeId
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['storeId'] = undefined;

/**
 * Идентификатор ПВЗ/магазина, куда необходимо доставить заказ (если применимо).
 * @member {Number} pid
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['pid'] = undefined;

/**
 * Адрес ПВЗ/магазина, куда необходимо доставить заказ (если применимо).
 * @member {String} officeAddress
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['officeAddress'] = undefined;

/**
 * Широта адреса ПВЗ/магазина, куда необходимо доставить заказ (если применимо).
 * @member {Number} OfficeLatitude
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['OfficeLatitude'] = undefined;

/**
 * Долгота адреса ПВЗ/магазина, куда необходимо доставить заказ (если применимо).
 * @member {Number} OfficeLongitude
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['OfficeLongitude'] = undefined;

/**
 * Адрес клиента для доставки.
 * @member {String} deliveryAddress
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['deliveryAddress'] = undefined;

/**
 * @member {module:model/DeliveryAddressDetails} deliveryAddressDetails
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['deliveryAddressDetails'] = undefined;

/**
 * @member {module:model/UserInfo} userInfo
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['userInfo'] = undefined;

/**
 * Идентификатор артикула.
 * @member {Number} chrtId
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['chrtId'] = undefined;

/**
 * Штрихкод товара.
 * @member {String} barcode
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['barcode'] = undefined;

/**
 * Массив штрихкодов товара.
 * @member {Array.<String>} barcodes
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['barcodes'] = undefined;

/**
 * Массив СЦ приоритетных для доставки заказа. <br>Если поле не заполнено или массив пустой, приоритетного СЦ нет для данного заказа нет. 
 * @member {Array.<String>} scOfficesNames
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['scOfficesNames'] = undefined;

/**
 * Статус выставляемый продавцами. <br>`0` - Новый заказ. <br>`1` - В работе. <br>`2` - Сборочное задание завершено. <br>`3` - Сборочное задание отклонено. <br>`5` - На доставке курьером. <br>`6` - Курьер довез и клиент принял товар. <br>`7` - Клиент не принял товар. 
 * @member {module:model/ApiV2OrdersGet200ResponseOrdersInner.StatusEnum} status
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['status'] = undefined;

/**
 * Статус выставляемый Wildberries. <br>`0` - Новый заказ. <br>`1` - Отмена клиента. <br>`2` - Доставлен. <br>`3` - Возврат. <br>`4` - Ожидает. <br>`5` - Брак. 
 * @member {module:model/ApiV2OrdersGet200ResponseOrdersInner.UserStatusEnum} userStatus
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['userStatus'] = undefined;

/**
 * Уникальный идентификатор вещи, `разный у одинаковых chrt_id`.
 * @member {String} rid
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['rid'] = undefined;

/**
 * Цена в валюте продажи с учетом скидок в копейках. `Код валюты продажи в поле currencyCode`.
 * @member {Number} totalPrice
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['totalPrice'] = undefined;

/**
 * Код валюты по ISO 4217. <br>Пример: <ul>   <li>`51` - Армянский драм.   <li>`398` - Казахский тенге.   <li>`417` - Киргизский сом.   <li>`643` - Российский рубль.   <li>`840` - Доллар США.   <li>`933` - Белорусский рубль.   <li>`974` - Белорусский рубль. </ul> 
 * @member {Number} currencyCode
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['currencyCode'] = undefined;

/**
 * Идентификатор транзакции (для группировки заказов).
 * @member {String} orderUID
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['orderUID'] = undefined;

/**
 * Тип доставки:   <ul>     <li>`1` - Обычная доставка.     <li>`2` - Доставка силами поставщика.   </ul> 
 * @member {module:model/ApiV2OrdersGet200ResponseOrdersInner.DeliveryTypeEnum} deliveryType
 */
ApiV2OrdersGet200ResponseOrdersInner.prototype['deliveryType'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {Number}
 * @readonly
 */
ApiV2OrdersGet200ResponseOrdersInner['StatusEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3,

    /**
     * value: 5
     * @const
     */
    "5": 5,

    /**
     * value: 6
     * @const
     */
    "6": 6,

    /**
     * value: 7
     * @const
     */
    "7": 7
};


/**
 * Allowed values for the <code>userStatus</code> property.
 * @enum {Number}
 * @readonly
 */
ApiV2OrdersGet200ResponseOrdersInner['UserStatusEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3,

    /**
     * value: 4
     * @const
     */
    "4": 4,

    /**
     * value: 5
     * @const
     */
    "5": 5
};


/**
 * Allowed values for the <code>deliveryType</code> property.
 * @enum {Number}
 * @readonly
 */
ApiV2OrdersGet200ResponseOrdersInner['DeliveryTypeEnum'] = {

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2
};



export default ApiV2OrdersGet200ResponseOrdersInner;

