/**
 * API продавца
 * # Общее описание <style> .version {   border: 0.1rem #b3b3b3 solid;   background-color: #F9F9F9;   color: #32329FE6;   height: 25px;   width: 150px;   text-align: center }, </style> <style> .warning {   border: 1.6rem #b3b3b3 solid;   background-color: #F9F9F9;   color: #247706;   text-align: center } </style>  Wildberries API предоставляет продавцам возможность управления магазином и получения оперативной и статистической информации по протоколу HTTP RestAPI. <br> Описание API предоставляется в формате [Swagger](https://swagger.io/) (Open API) и может быть использовано для импорта в другие инструменты (такие как PostMan) или генерации клиентского кода на различных языках программирования с помощью [Swagger CodeGen](https://swagger.io/tools/swagger-codegen/)  <ul> <li> Описание в оригинальном swagger-формате <a href=\"/swagger\">swagger</a> <li> OpenAPI-файл <a href=\"/swagger.yaml\">swagger.yaml</a> </ul>  <br> Для ручной проверки API вы можете использовать: <ul> <li> Под ОС Windows - [PostMan](https://www.postman.com/) <li> Под ОС Linux - [curl](https://curl.se/)  </ul>  ## Поддержка <br> Техническая поддержка осуществляется через обращения в личном кабинете продавца. При создании нового обращения в техподдержку используйте категорию API. <br> Новости и изменения, касающиеся API, публикуются в [новостной ленте Wildberries](https://seller.wildberries.ru/news). <br> Также готовятся к публикации Release Notes по API на сайте.  После их выхода будет сделан соответствующий анонс.   ## Авторизация Авторизация осуществляется по ключам API, которые  владелец личного кабинета (главный пользователь) самостоятельно  генерирует в разделе   [Профиль --> Настройки --> Доступ к новому API](https://seller.wildberries.ru/supplier-settings/access-to-new-api). <br>Обратите внимание, что ключ отображается ТОЛЬКО в момент создания. Его надо сохранить, потому что больше его отобразить будет нельзя. <br>Созданный ключ следует добавлять в каждый запрос, прибавляя к запросу заголовок (http-header) формата `Authorization: .........`. <br> <br>Внимание! Изменился домен для методов статистики, актуальный: https://statistics-api.wildberries.ru ## Форматы ### Дата и время Во всех методах API статистики дата и время передаются в формате [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).  <br> В большинстве случаев вы можете передать дату или дату со временем. Если время не указано, оно принимается равным 00:00:00. Время можно указывать с точностью до секунд или миллисекунд.  Литера `Z` в конце строки означает часовой пояс UTC. При ее отсутствии время считается в часовом поясе МСК (UTC+3). <br> Примеры: <ul> <li> `2019-06-20` <li> `2019-06-20T00:00:00Z` <li> `2019-06-20T23:59:59` <li> `2019-06-20T00:00:00.12345Z` <li> `2019-06-20T00:00:00.12345` <li> `2017-03-25T00:00:00` </ul> ## Release Notes #### 2022.12.21 v1.6 Добавлена инструкция по загрузке статистики в Excel #### 2022.12.15 v1.5  Новая авторизация для методов API статистики 2022.12.15 в v1.5: #### 2022.10.31 v1.4  Метод будет отключен 2022.10.31 в v1.4: <ul> <li> `/content/v1/cards/list` </ul>  #### 2022.09.20 v1.2  В связи с переходом на новое API Контента старые методы будут отключены. К их числу относятся: <ul> <li> `/card/_*` <li> `/api/v1/config/_*` <li> `/api/v1/directory/_*` </ul> Данные методы теперь возвращают код 404.  Новое API Контента описано в данном документе в разделах Контент / * 
 *
 * The version of the OpenAPI document: 1.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../../ApiClient";
import ContentV1BarcodesPost200Response from '../model/ContentV1BarcodesPost200Response';
import ContentV1BarcodesPostRequest from '../model/ContentV1BarcodesPostRequest';
import ContentV1CardsCursorListPost200Response from '../model/ContentV1CardsCursorListPost200Response';
import ContentV1CardsCursorListPostRequest from '../model/ContentV1CardsCursorListPostRequest';
import ContentV1CardsErrorListGet200Response from '../model/ContentV1CardsErrorListGet200Response';
import ContentV1CardsFilterPost200Response from '../model/ContentV1CardsFilterPost200Response';
import ContentV1CardsFilterPostRequest from '../model/ContentV1CardsFilterPostRequest';
import ContentV1CardsUpdatePost200Response from '../model/ContentV1CardsUpdatePost200Response';
import ContentV1CardsUpdatePostRequestInner from '../model/ContentV1CardsUpdatePostRequestInner';
import ContentV1CardsUploadAddPostRequest from '../model/ContentV1CardsUploadAddPostRequest';
import ContentV1CardsUploadPostRequestInnerInner from '../model/ContentV1CardsUploadPostRequestInnerInner';
import ContentV1DirectoryBrandsGet200Response from '../model/ContentV1DirectoryBrandsGet200Response';
import ContentV1DirectoryCollectionsGet200Response from '../model/ContentV1DirectoryCollectionsGet200Response';
import ContentV1DirectoryColorsGet200Response from '../model/ContentV1DirectoryColorsGet200Response';
import ContentV1DirectoryConsistsGet200Response from '../model/ContentV1DirectoryConsistsGet200Response';
import ContentV1DirectoryContentsGet200Response from '../model/ContentV1DirectoryContentsGet200Response';
import ContentV1DirectoryCountriesGet200Response from '../model/ContentV1DirectoryCountriesGet200Response';
import ContentV1DirectoryKindsGet200Response from '../model/ContentV1DirectoryKindsGet200Response';
import ContentV1DirectorySeasonsGet200Response from '../model/ContentV1DirectorySeasonsGet200Response';
import ContentV1DirectoryTnvedGet200Response from '../model/ContentV1DirectoryTnvedGet200Response';
import ContentV1MediaSavePostRequest from '../model/ContentV1MediaSavePostRequest';
import ContentV1ObjectAllGet200Response from '../model/ContentV1ObjectAllGet200Response';
import ContentV1ObjectCharacteristicsListFilterGet200Response from '../model/ContentV1ObjectCharacteristicsListFilterGet200Response';
import ContentV1ObjectCharacteristicsObjectNameGet200Response from '../model/ContentV1ObjectCharacteristicsObjectNameGet200Response';
import ContentV1ObjectParentAllGet200Response from '../model/ContentV1ObjectParentAllGet200Response';
import DetailReportItem from '../model/DetailReportItem';
import ExcItem from '../model/ExcItem';
import IncomesItem from '../model/IncomesItem';
import OrdersItem from '../model/OrdersItem';
import PublicApiV1InfoGet200Response from '../model/PublicApiV1InfoGet200Response';
import PublicApiV1PricesPostRequestInner from '../model/PublicApiV1PricesPostRequestInner';
import PublicApiV1RevokeDiscountsPost200Response from '../model/PublicApiV1RevokeDiscountsPost200Response';
import PublicApiV1UpdateDiscountsPostRequestInner from '../model/PublicApiV1UpdateDiscountsPostRequestInner';
import PublicApiV1UpdatePromocodesPostRequestInner from '../model/PublicApiV1UpdatePromocodesPostRequestInner';
import ResponseBodyError400 from '../model/ResponseBodyError400';
import ResponseBodyError403 from '../model/ResponseBodyError403';
import SalesItem from '../model/SalesItem';
import StocksItem from '../model/StocksItem';

/**
*  service.
* @module api/DefaultApi
* @version 1.6
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiV1SupplierExciseGoodsGet operation.
     * @callback module:api/DefaultApi~apiV1SupplierExciseGoodsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ExcItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Отчет по КиЗам
     * Отчет по КиЗам. <br> КИЗ — это контрольный идентификационный знак.  Он представляет собой маркировку, похожую на QR-код, который проставляется на некоторых товарах.  Его можно отсканировать с помощью специального приложения и убедиться в качестве и оригинальности товара.  Сканирование КИЗов доступно как продавцу, так и покупателю, а также всем остальным участникам процесса продажи. 
     * @param {String} dateFrom Дата в формате RFC3339. Можно передать дату или дату со временем.  Время можно указывать с точностью до секунд или миллисекунд.  Литера `Z` в конце строки означает, что время передается в UTC-часовом поясе.  При ее отсутствии время считается в часовом поясе МСК (UTC+3). <br>Примеры: <ul> <li> `2019-06-20` <li> `2019-06-20T00:00:00Z` <li> `2019-06-20T23:59:59` <li> `2019-06-20T00:00:00.12345Z` <li> `2019-06-20T00:00:00.12345` <li> `2017-03-25T00:00:00` </ul> 
     * @param {module:api/DefaultApi~apiV1SupplierExciseGoodsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ExcItem>}
     */
    apiV1SupplierExciseGoodsGet(dateFrom, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'dateFrom' is set
      if (dateFrom === undefined || dateFrom === null) {
        throw new Error("Missing the required parameter 'dateFrom' when calling apiV1SupplierExciseGoodsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'dateFrom': dateFrom
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ExcItem];
      let basePaths = ['https://statistics-api.wildberries.ru/'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/api/v1/supplier/excise-goods', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1SupplierIncomesGet operation.
     * @callback module:api/DefaultApi~apiV1SupplierIncomesGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/IncomesItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Поставки
     * Поставки
     * @param {String} dateFrom Дата в формате RFC3339. Можно передать дату или дату со временем.  Время можно указывать с точностью до секунд или миллисекунд.  Литера `Z` в конце строки означает, что время передается в UTC-часовом поясе.  При ее отсутствии время считается в часовом поясе МСК (UTC+3). <br>Примеры: <ul> <li> `2019-06-20` <li> `2019-06-20T00:00:00Z` <li> `2019-06-20T23:59:59` <li> `2019-06-20T00:00:00.12345Z` <li> `2019-06-20T00:00:00.12345` <li> `2017-03-25T00:00:00` </ul> 
     * @param {module:api/DefaultApi~apiV1SupplierIncomesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/IncomesItem>}
     */
    apiV1SupplierIncomesGet(dateFrom, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'dateFrom' is set
      if (dateFrom === undefined || dateFrom === null) {
        throw new Error("Missing the required parameter 'dateFrom' when calling apiV1SupplierIncomesGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'dateFrom': dateFrom
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [IncomesItem];
      let basePaths = ['https://statistics-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/api/v1/supplier/incomes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1SupplierOrdersGet operation.
     * @callback module:api/DefaultApi~apiV1SupplierOrdersGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/OrdersItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Заказы
     * Заказы. <br>  Важно: гарантируется хранение данных по заказам не более 90 дней от даты заказа. Данные обновляются раз в 30 минут.  Точное время обновления информации в сервисе можно увидеть в поле `lastChangeDate`. <br> Для идентификации товаров из одного заказа, а также продаж по ним, следует использовать  поле `gNumber` (строки с одинаковым значением этого поля относятся к одному заказу) и номер  уникальной позиции в заказе `odid` (`rid`).  
     * @param {String} dateFrom Дата в формате RFC3339. Можно передать дату или дату со временем.  Время можно указывать с точностью до секунд или миллисекунд.  Литера `Z` в конце строки означает, что время передается в UTC-часовом поясе.  При ее отсутствии время считается в часовом поясе МСК (UTC+3). <br>Примеры: <ul> <li> `2019-06-20` <li> `2019-06-20T00:00:00Z` <li> `2019-06-20T23:59:59` <li> `2019-06-20T00:00:00.12345Z` <li> `2019-06-20T00:00:00.12345` <li> `2017-03-25T00:00:00` </ul> 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.flag Если параметр `flag=0` (или не указан в строке запроса), при вызове API возвращаются данные,  у которых значение поля `lastChangeDate` (дата время обновления информации в сервисе) больше или равно переданному  значению параметра `dateFrom`.  При этом количество возвращенных строк данных варьируется в интервале от 0 до примерно 100 000. <br> Если параметр `flag=1`, то будет выгружена информация обо всех заказах или продажах с датой,  равной переданному параметру `dateFrom` (в данном случае время в дате значения не имеет).  При этом количество возвращенных строк данных будет равно количеству всех заказов или продаж,  сделанных в указанную дату, переданную в параметре `dateFrom`.  (default to 0)
     * @param {module:api/DefaultApi~apiV1SupplierOrdersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/OrdersItem>}
     */
    apiV1SupplierOrdersGet(dateFrom, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'dateFrom' is set
      if (dateFrom === undefined || dateFrom === null) {
        throw new Error("Missing the required parameter 'dateFrom' when calling apiV1SupplierOrdersGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'dateFrom': dateFrom,
        'flag': opts['flag']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [OrdersItem];
      let basePaths = ['https://statistics-api.wildberries.ru/'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/api/v1/supplier/orders', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1SupplierReportDetailByPeriodGet operation.
     * @callback module:api/DefaultApi~apiV1SupplierReportDetailByPeriodGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DetailReportItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Отчет о продажах по реализации
     * Отчет о продажах по реализации.  <br> В отчете доступны данные за последние 3 месяца. <br> В случае отсутствия данных за указанный период метод вернет `null`. <br> Технический перерыв в работе метода: каждый понедельник с 3:00 до 16:00. 
     * @param {String} dateFrom Дата в формате RFC3339. Можно передать дату или дату со временем.  Время можно указывать с точностью до секунд или миллисекунд.  Литера `Z` в конце строки означает, что время передается в UTC-часовом поясе.  При ее отсутствии время считается в часовом поясе МСК (UTC+3). <br>Примеры: <ul> <li> `2019-06-20` <li> `2019-06-20T00:00:00Z` <li> `2019-06-20T23:59:59` <li> `2019-06-20T00:00:00.12345Z` <li> `2019-06-20T00:00:00.12345` <li> `2017-03-25T00:00:00` </ul> 
     * @param {Date} dateTo Конечная дата отчета
     * @param {Object} opts Optional parameters
     * @param {Number} opts.limit Максимальное количество строк отчета, возвращаемых методом. Не может быть более 100 000. (default to 0)
     * @param {Number} opts.rrdid Уникальный идентификатор строки отчета. Необходим для получения отчета частями.  <br> Загрузку отчета нужно начинать с `rrdid = 0` и при последующих вызовах API передавать в запросе значение `rrd_id` из последней строки, полученной в результате предыдущего вызова.  <br> Таким образом для загрузки одного отчета может понадобиться вызывать API до тех пор, пока количество возвращаемых строк не станет равным нулю. 
     * @param {module:api/DefaultApi~apiV1SupplierReportDetailByPeriodGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DetailReportItem>}
     */
    apiV1SupplierReportDetailByPeriodGet(dateFrom, dateTo, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'dateFrom' is set
      if (dateFrom === undefined || dateFrom === null) {
        throw new Error("Missing the required parameter 'dateFrom' when calling apiV1SupplierReportDetailByPeriodGet");
      }
      // verify the required parameter 'dateTo' is set
      if (dateTo === undefined || dateTo === null) {
        throw new Error("Missing the required parameter 'dateTo' when calling apiV1SupplierReportDetailByPeriodGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'dateFrom': dateFrom,
        'limit': opts['limit'],
        'dateTo': dateTo,
        'rrdid': opts['rrdid']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [DetailReportItem];
      let basePaths = ['https://statistics-api.wildberries.ru/'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/api/v1/supplier/reportDetailByPeriod', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1SupplierSalesGet operation.
     * @callback module:api/DefaultApi~apiV1SupplierSalesGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/SalesItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Продажи
     * Продажи. <br> Важно: гарантируется хранение данных по заказам не более 90 дней от даты заказа. Данные обновляются раз в 30 минут. Точное время обновления информации в сервисе можно увидеть в поле `lastChangeDate`. <br> Для идентификации товаров из одного заказа, а также продаж по ним, следует использовать  поле `gNumber` (строки с одинаковым значением этого поля относятся к одному заказу) и номер  уникальной позиции в заказе `odid` (`rid`).  <br> Для расчета окончательной стоимости (суммы к оплате) следует пользоваться следующей формулой: <br> `PriceWithDiscount = totalPrice * ((100 – discountPercent)/100) * ((100 – promoCodeDiscount)/100) *((100 – spp)/100)` 
     * @param {String} dateFrom Дата в формате RFC3339. Можно передать дату или дату со временем.  Время можно указывать с точностью до секунд или миллисекунд.  Литера `Z` в конце строки означает, что время передается в UTC-часовом поясе.  При ее отсутствии время считается в часовом поясе МСК (UTC+3). <br>Примеры: <ul> <li> `2019-06-20` <li> `2019-06-20T00:00:00Z` <li> `2019-06-20T23:59:59` <li> `2019-06-20T00:00:00.12345Z` <li> `2019-06-20T00:00:00.12345` <li> `2017-03-25T00:00:00` </ul> 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.flag Если параметр `flag=0` (или не указан в строке запроса), при вызове API возвращаются данные,  у которых значение поля `lastChangeDate` (дата время обновления информации в сервисе) больше или равно переданному  значению параметра `dateFrom`.  При этом количество возвращенных строк данных варьируется в интервале от 0 до примерно 100 000. <br> Если параметр `flag=1`, то будет выгружена информация обо всех заказах или продажах с датой,  равной переданному параметру `dateFrom` (в данном случае время в дате значения не имеет).  При этом количество возвращенных строк данных будет равно количеству всех заказов или продаж,  сделанных в указанную дату, переданную в параметре `dateFrom`.  (default to 0)
     * @param {module:api/DefaultApi~apiV1SupplierSalesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/SalesItem>}
     */
    apiV1SupplierSalesGet(dateFrom, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'dateFrom' is set
      if (dateFrom === undefined || dateFrom === null) {
        throw new Error("Missing the required parameter 'dateFrom' when calling apiV1SupplierSalesGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'dateFrom': dateFrom,
        'flag': opts['flag']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [SalesItem];
      let basePaths = ['https://statistics-api.wildberries.ru/'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/api/v1/supplier/sales', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1SupplierStocksGet operation.
     * @callback module:api/DefaultApi~apiV1SupplierStocksGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/StocksItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Склад
     * Склад. Данные обновляются раз в сутки. Сервис статистики не хранит историю остатков товаров, поэтому получить данные об остатках товаров на прошедшую, не сегодняшнюю, дату - невозможно.
     * @param {String} dateFrom Дата в формате RFC3339. Можно передать дату или дату со временем.  Время можно указывать с точностью до секунд или миллисекунд.  Литера `Z` в конце строки означает, что время передается в UTC-часовом поясе.  При ее отсутствии время считается в часовом поясе МСК (UTC+3). <br>Примеры: <ul> <li> `2019-06-20` <li> `2019-06-20T00:00:00Z` <li> `2019-06-20T23:59:59` <li> `2019-06-20T00:00:00.12345Z` <li> `2019-06-20T00:00:00.12345` <li> `2017-03-25T00:00:00` </ul> 
     * @param {module:api/DefaultApi~apiV1SupplierStocksGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/StocksItem>}
     */
    apiV1SupplierStocksGet(dateFrom, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'dateFrom' is set
      if (dateFrom === undefined || dateFrom === null) {
        throw new Error("Missing the required parameter 'dateFrom' when calling apiV1SupplierStocksGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'dateFrom': dateFrom
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [StocksItem];
      let basePaths = ['https://statistics-api.wildberries.ru/'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/api/v1/supplier/stocks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1BarcodesPost operation.
     * @callback module:api/DefaultApi~contentV1BarcodesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1BarcodesPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Генерация баркодов
     * Метод позволяет сгенерировать массив уникальных баркодов для создания размера НМ в КТ.
     * @param {module:model/ContentV1BarcodesPostRequest} contentV1BarcodesPostRequest 
     * @param {module:api/DefaultApi~contentV1BarcodesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1BarcodesPost200Response}
     */
    contentV1BarcodesPost(contentV1BarcodesPostRequest, opts, callback) {
      opts = opts || {};
      let postBody = contentV1BarcodesPostRequest;
      // verify the required parameter 'contentV1BarcodesPostRequest' is set
      if (contentV1BarcodesPostRequest === undefined || contentV1BarcodesPostRequest === null) {
        throw new Error("Missing the required parameter 'contentV1BarcodesPostRequest' when calling contentV1BarcodesPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ContentV1BarcodesPost200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/barcodes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1CardsCursorListPost operation.
     * @callback module:api/DefaultApi~contentV1CardsCursorListPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1CardsCursorListPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Список НМ v2
     * Метод позволяет получить список созданых НМ по фильтру (баркод, вендор код, номер номенклатуры) с пагинацией и сортировкой. <br> <br>Порядок работы с `cursor/list`: <br> Чтобы получить полный список номенклатур, <b>если их > 1000</b>, необходимо воспользоваться пагинацией.   <ol>     <li>Cделать первый запрос (все указанные ниже параметры обязательны):       <br>       <code>{</code>       <ul>         <l><code>\"sort\": {</code></li>          <ul>             <l><code>\"cursor\": {</code></li>               <ul>                 <l><code>\"limit\": 1000</code></li>               </ul>             <l><code>},</code></li>           </ul>           <ul>             <l><code>\"filter\": {</code></li>               <ul>                 <l><code>\"withPhoto\": -1</code></li>               </ul>             <l><code>}</code></li>           </ul>         <l><code>}</code></li>       </ul>       <code>}</code>       <br>По желанию можно добавить поиск по <code>\"textSearch\"</code> и сортировку.       <br><code>\"sort\": {</code>         <dd><code>\"sortColumn\": \"\",</code></dd>         <dd><code>\"ascending\": false</code></dd>       <code>}</code>     </li>     <li>Пройти в конец полученного списка номенклатур, скопировать из <code>cursor</code> две строки:       <ul>         <li><code>\"updatedAt\": \"***\",</code></li>         <li><code>\"nmID\": ***,</code></li>       </ul>     <li>Вставить скопированные строки в <code>cursor</code> запроса, повторить вызов метода. </li>     <li>Повторять пункты <b>2</b> и <b>3</b>, пока <code>total</code> в ответе не станет меньше чем <code>limit</code> в запросе.       <br>Это будет означать, что Вы получили все карточки.   </ol> 
     * @param {module:model/ContentV1CardsCursorListPostRequest} contentV1CardsCursorListPostRequest 
     * @param {module:api/DefaultApi~contentV1CardsCursorListPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1CardsCursorListPost200Response}
     */
    contentV1CardsCursorListPost(contentV1CardsCursorListPostRequest, opts, callback) {
      opts = opts || {};
      let postBody = contentV1CardsCursorListPostRequest;
      // verify the required parameter 'contentV1CardsCursorListPostRequest' is set
      if (contentV1CardsCursorListPostRequest === undefined || contentV1CardsCursorListPostRequest === null) {
        throw new Error("Missing the required parameter 'contentV1CardsCursorListPostRequest' when calling contentV1CardsCursorListPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ContentV1CardsCursorListPost200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/cards/cursor/list', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1CardsErrorListGet operation.
     * @callback module:api/DefaultApi~contentV1CardsErrorListGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1CardsErrorListGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Список несозданных НМ с ошибками
     * Метод позволяет получить список НМ и список ошибок которые произошли во время создания КТ. <br>`ВАЖНО`: Для того чтобы убрать НМ из ошибочных, надо повторно сделать запрос с исправленными ошибками на создание КТ. 
     * @param {module:api/DefaultApi~contentV1CardsErrorListGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1CardsErrorListGet200Response}
     */
    contentV1CardsErrorListGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContentV1CardsErrorListGet200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/cards/error/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1CardsFilterPost operation.
     * @callback module:api/DefaultApi~contentV1CardsFilterPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1CardsFilterPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Получение КТ по вендор кодам (артикулам)
     * Метод позволяет получить полную информацию по КТ с помощью вендор кода(-ов) номенклатуры из КТ  (артикулов). 
     * @param {module:model/ContentV1CardsFilterPostRequest} contentV1CardsFilterPostRequest 
     * @param {module:api/DefaultApi~contentV1CardsFilterPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1CardsFilterPost200Response}
     */
    contentV1CardsFilterPost(contentV1CardsFilterPostRequest, opts, callback) {
      opts = opts || {};
      let postBody = contentV1CardsFilterPostRequest;
      // verify the required parameter 'contentV1CardsFilterPostRequest' is set
      if (contentV1CardsFilterPostRequest === undefined || contentV1CardsFilterPostRequest === null) {
        throw new Error("Missing the required parameter 'contentV1CardsFilterPostRequest' when calling contentV1CardsFilterPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ContentV1CardsFilterPost200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/cards/filter', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1CardsUpdatePost operation.
     * @callback module:api/DefaultApi~contentV1CardsUpdatePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1CardsUpdatePost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Редактирование КТ
     * Метод позволяет отредактировать несколько карточек за раз. <br> Редактирование КТ происходит асинхронно, после отправки запрос становится в очередь на обработку. <br> `Важно`: Баркоды (skus) не подлежат удалению или замене. Попытка заменить существующий баркод приведет к добавлению нового баркода к существующему. <br> Номенклатуры, содержащие ошибки, не обновляются и попадают в раздел \"Список несозданных НМ с ошибками\" с описанием допущенной ошибки. Для того, чтобы убрать НМ из ошибочных, необходимо повторно сделать запрос с исправленными ошибками. <br> <br> Для успешного обновления карточки рекомендуем Вам придерживаться следующего порядка действий: <br> 1. Сначала существующую карточку необходимо запросить методом cards/filter. <br> 2. Забираем из ответа массив data. <br> 3. В этом массиве вносим необходимые изменения и отправляем его в cards/update 
     * @param {Array.<module:model/ContentV1CardsUpdatePostRequestInner>} contentV1CardsUpdatePostRequestInner 
     * @param {module:api/DefaultApi~contentV1CardsUpdatePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1CardsUpdatePost200Response}
     */
    contentV1CardsUpdatePost(contentV1CardsUpdatePostRequestInner, opts, callback) {
      opts = opts || {};
      let postBody = contentV1CardsUpdatePostRequestInner;
      // verify the required parameter 'contentV1CardsUpdatePostRequestInner' is set
      if (contentV1CardsUpdatePostRequestInner === undefined || contentV1CardsUpdatePostRequestInner === null) {
        throw new Error("Missing the required parameter 'contentV1CardsUpdatePostRequestInner' when calling contentV1CardsUpdatePost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ContentV1CardsUpdatePost200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/cards/update', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1CardsUploadAddPost operation.
     * @callback module:api/DefaultApi~contentV1CardsUploadAddPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1CardsUpdatePost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Добавление НМ к КТ
     * Метод позволяет добавить к карточке товара новую номенклатуру. <br>Добавление НМ к КТ происходит асинхронно, после отправки запрос становится в очередь на обработку. <br>`Важно`: Если после успешной отправки запроса номенклатура не создалась, то необходимо проверить раздел \"Список несозданных НМ с ошибками\". Для того чтобы убрать НМ из ошибочных, необходимо повторно сделать запрос с исправленными ошибками. 
     * @param {module:model/ContentV1CardsUploadAddPostRequest} contentV1CardsUploadAddPostRequest 
     * @param {module:api/DefaultApi~contentV1CardsUploadAddPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1CardsUpdatePost200Response}
     */
    contentV1CardsUploadAddPost(contentV1CardsUploadAddPostRequest, opts, callback) {
      opts = opts || {};
      let postBody = contentV1CardsUploadAddPostRequest;
      // verify the required parameter 'contentV1CardsUploadAddPostRequest' is set
      if (contentV1CardsUploadAddPostRequest === undefined || contentV1CardsUploadAddPostRequest === null) {
        throw new Error("Missing the required parameter 'contentV1CardsUploadAddPostRequest' when calling contentV1CardsUploadAddPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ContentV1CardsUpdatePost200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/cards/upload/add', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1CardsUploadPost operation.
     * @callback module:api/DefaultApi~contentV1CardsUploadPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1CardsUpdatePost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Создание  КТ
     * Создание карточки товара происходит асинхронно, при отправке запроса на создание КТ ваш запрос становится в очередь на создание КТ. <br>`ПРИМЕЧАНИЕ`: Карточка товара считается `созданной`, если успешно создалась хотя бы одна `НМ`. <br>`ВАЖНО`: Если во время обработки запроса в очереди выявляются ошибки, то НМ считается ошибочной. <br>Если запрос на создание прошел успешно, а карточка не создалась, то необходимо в первую очередь проверить наличие карточки в методе `cards/error/list`. Если карточка попала в ответ к этому методу, то необходимо исправить описанные ошибки в запросе на создание карточки и отправить его повторно. 
     * @param {Array.<[ContentV1CardsUploadPostRequestInnerInner]>} contentV1CardsUploadPostRequestInnerInner 
     * @param {module:api/DefaultApi~contentV1CardsUploadPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1CardsUpdatePost200Response}
     */
    contentV1CardsUploadPost(contentV1CardsUploadPostRequestInnerInner, opts, callback) {
      opts = opts || {};
      let postBody = contentV1CardsUploadPostRequestInnerInner;
      // verify the required parameter 'contentV1CardsUploadPostRequestInnerInner' is set
      if (contentV1CardsUploadPostRequestInnerInner === undefined || contentV1CardsUploadPostRequestInnerInner === null) {
        throw new Error("Missing the required parameter 'contentV1CardsUploadPostRequestInnerInner' when calling contentV1CardsUploadPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ContentV1CardsUpdatePost200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/cards/upload', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1DirectoryBrandsGet operation.
     * @callback module:api/DefaultApi~contentV1DirectoryBrandsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1DirectoryBrandsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Бренд
     * Получение значения характеристики Бренд.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.top Количество запрашиваемых значений (максимум 5000)
     * @param {String} opts.pattern Поиск по наименованию значения характеристики
     * @param {module:api/DefaultApi~contentV1DirectoryBrandsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1DirectoryBrandsGet200Response}
     */
    contentV1DirectoryBrandsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'top': opts['top'],
        'pattern': opts['pattern']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContentV1DirectoryBrandsGet200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/directory/brands', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1DirectoryCollectionsGet operation.
     * @callback module:api/DefaultApi~contentV1DirectoryCollectionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1DirectoryCollectionsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Коллекция
     * Получение значения характеристики Коллекции.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.top Количество запрашиваемых значений (максимум 5000)
     * @param {String} opts.pattern Поиск по наименованию значения характеристики
     * @param {module:api/DefaultApi~contentV1DirectoryCollectionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1DirectoryCollectionsGet200Response}
     */
    contentV1DirectoryCollectionsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'top': opts['top'],
        'pattern': opts['pattern']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContentV1DirectoryCollectionsGet200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/directory/collections', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1DirectoryColorsGet operation.
     * @callback module:api/DefaultApi~contentV1DirectoryColorsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1DirectoryColorsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Цвет
     * Получение значения характеристики цвет.
     * @param {module:api/DefaultApi~contentV1DirectoryColorsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1DirectoryColorsGet200Response}
     */
    contentV1DirectoryColorsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContentV1DirectoryColorsGet200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/directory/colors', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1DirectoryConsistsGet operation.
     * @callback module:api/DefaultApi~contentV1DirectoryConsistsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1DirectoryConsistsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Состав
     * Получение значения характеристики Состав.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.top Количество запрашиваемых значений (максимум 5000)
     * @param {String} opts.pattern Поиск по наименованию значения характеристики
     * @param {module:api/DefaultApi~contentV1DirectoryConsistsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1DirectoryConsistsGet200Response}
     */
    contentV1DirectoryConsistsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'top': opts['top'],
        'pattern': opts['pattern']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContentV1DirectoryConsistsGet200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/directory/consists', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1DirectoryContentsGet operation.
     * @callback module:api/DefaultApi~contentV1DirectoryContentsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1DirectoryContentsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Комплектация
     * Получение значения характеристики Комплектация.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.top Количество запрашиваемых значений
     * @param {String} opts.pattern Поиск по наименованию значения характеристики
     * @param {module:api/DefaultApi~contentV1DirectoryContentsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1DirectoryContentsGet200Response}
     */
    contentV1DirectoryContentsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'top': opts['top'],
        'pattern': opts['pattern']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContentV1DirectoryContentsGet200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/directory/contents', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1DirectoryCountriesGet operation.
     * @callback module:api/DefaultApi~contentV1DirectoryCountriesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1DirectoryCountriesGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Страна Производства
     * Получение значения характеристики Страна Производства.
     * @param {module:api/DefaultApi~contentV1DirectoryCountriesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1DirectoryCountriesGet200Response}
     */
    contentV1DirectoryCountriesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContentV1DirectoryCountriesGet200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/directory/countries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1DirectoryKindsGet operation.
     * @callback module:api/DefaultApi~contentV1DirectoryKindsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1DirectoryKindsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Пол
     * Получение значения характеристики пол.
     * @param {module:api/DefaultApi~contentV1DirectoryKindsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1DirectoryKindsGet200Response}
     */
    contentV1DirectoryKindsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContentV1DirectoryKindsGet200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/directory/kinds', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1DirectorySeasonsGet operation.
     * @callback module:api/DefaultApi~contentV1DirectorySeasonsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1DirectorySeasonsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Сезон
     * Получение значения характеристики Сезон.
     * @param {module:api/DefaultApi~contentV1DirectorySeasonsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1DirectorySeasonsGet200Response}
     */
    contentV1DirectorySeasonsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContentV1DirectorySeasonsGet200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/directory/seasons', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1DirectoryTnvedGet operation.
     * @callback module:api/DefaultApi~contentV1DirectoryTnvedGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1DirectoryTnvedGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * ТНВЭД код
     * С помощью данного метода можно получить список ТНВЭД кодов по имени категории и фильтру по тнвэд коду.
     * @param {Object} opts Optional parameters
     * @param {String} opts.objectName Поиск по наименованию категории
     * @param {String} opts.tnvedsLike Поиск по коду ТНВЭД
     * @param {module:api/DefaultApi~contentV1DirectoryTnvedGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1DirectoryTnvedGet200Response}
     */
    contentV1DirectoryTnvedGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'objectName': opts['objectName'],
        'tnvedsLike': opts['tnvedsLike']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContentV1DirectoryTnvedGet200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/directory/tnved', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1MediaFilePost operation.
     * @callback module:api/DefaultApi~contentV1MediaFilePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1CardsUpdatePost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Добавление медиа контента в КТ
     * Метод позволяет загрузить и добавить один медиафайл за запрос, к НМ в КТ. <br>Требования к медиафайлам: <br>`Фото`: минимальное разрешение – 450х450. <br>Максимально допустимое количество фото в КТ 30. <br>`Видео`: максимальный размер 50 мб. Форматы MOV, MP4. <br>Максимально допустимое количество видео в КТ 1. 
     * @param {String} xVendorCode Артикул НМ
     * @param {Number} xPhotoNumber Номер медиафайла на загрузку. <b>Начинать с 1</b>. <br>Чтобы добавить фото к уже загруженным в НМ, номер медиафайла должен быть больше кол-ва загруженных в НМ медиафайлов. 
     * @param {Object} opts Optional parameters
     * @param {File} opts.uploadfile 
     * @param {module:api/DefaultApi~contentV1MediaFilePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1CardsUpdatePost200Response}
     */
    contentV1MediaFilePost(xVendorCode, xPhotoNumber, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'xVendorCode' is set
      if (xVendorCode === undefined || xVendorCode === null) {
        throw new Error("Missing the required parameter 'xVendorCode' when calling contentV1MediaFilePost");
      }
      // verify the required parameter 'xPhotoNumber' is set
      if (xPhotoNumber === undefined || xPhotoNumber === null) {
        throw new Error("Missing the required parameter 'xPhotoNumber' when calling contentV1MediaFilePost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Vendor-Code': xVendorCode,
        'X-Photo-Number': xPhotoNumber
      };
      let formParams = {
        'uploadfile': opts['uploadfile']
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = ContentV1CardsUpdatePost200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/media/file', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1MediaSavePost operation.
     * @callback module:api/DefaultApi~contentV1MediaSavePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1CardsUpdatePost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Изменение медиа контента КТ
     * Метод позволяет изменить порядок изображений или удалить медиафайлы с НМ в КТ, а также загрузить изображения в НМ со сторонних ресурсов по URL. <br>Текущие изображения заменяются на переданные в массиве data. <br> <br>Требования к медиафайлам: <br>`Фото`: минимальное разрешение – 450х450. <br>Максимально допустимое количество фото в КТ 30. <br> <br>Если хотя бы одно изображение в запросе не соответствует требованиям к медиафайлам, то даже при коде ответа 200 изображения не загрузятся в КТ. 
     * @param {module:model/ContentV1MediaSavePostRequest} contentV1MediaSavePostRequest 
     * @param {module:api/DefaultApi~contentV1MediaSavePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1CardsUpdatePost200Response}
     */
    contentV1MediaSavePost(contentV1MediaSavePostRequest, opts, callback) {
      opts = opts || {};
      let postBody = contentV1MediaSavePostRequest;
      // verify the required parameter 'contentV1MediaSavePostRequest' is set
      if (contentV1MediaSavePostRequest === undefined || contentV1MediaSavePostRequest === null) {
        throw new Error("Missing the required parameter 'contentV1MediaSavePostRequest' when calling contentV1MediaSavePost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ContentV1CardsUpdatePost200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/media/save', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1ObjectAllGet operation.
     * @callback module:api/DefaultApi~contentV1ObjectAllGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1ObjectAllGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Категория товаров
     * С помощью данного метода можно получить список категорий товаров по текстовому фильтру (названию категории).
     * @param {Object} opts Optional parameters
     * @param {String} opts.name Поиск по названию категории
     * @param {Number} opts.top Количество запрашиваемых значений
     * @param {module:api/DefaultApi~contentV1ObjectAllGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1ObjectAllGet200Response}
     */
    contentV1ObjectAllGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'name': opts['name'],
        'top': opts['top']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContentV1ObjectAllGet200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/object/all', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1ObjectCharacteristicsListFilterGet operation.
     * @callback module:api/DefaultApi~contentV1ObjectCharacteristicsListFilterGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1ObjectCharacteristicsListFilterGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Характеристики для создания КТ по всем подкатегориям
     * С помощью данного метода можно получить список характеристик, которые можно или нужно заполнить при создании КТ в подкатегории определенной родительской категории.   <br>   <br>Характеристики с  `charcType=4`, имеющие единственное значение, <b>указывать строго без массива</b>, в противном случае карточка не будет создана:   <br><b>Правильно:</b>       <br>`{\"Высота упаковки\": 4}`   <br><b>Не правильно:</b>       <br>`{\"Высота упаковки\": [4]}` 
     * @param {Object} opts Optional parameters
     * @param {String} opts.name Поиск по родительской категории.
     * @param {module:api/DefaultApi~contentV1ObjectCharacteristicsListFilterGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1ObjectCharacteristicsListFilterGet200Response}
     */
    contentV1ObjectCharacteristicsListFilterGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'name': opts['name']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContentV1ObjectCharacteristicsListFilterGet200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/object/characteristics/list/filter', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1ObjectCharacteristicsObjectNameGet operation.
     * @callback module:api/DefaultApi~contentV1ObjectCharacteristicsObjectNameGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1ObjectCharacteristicsObjectNameGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Характеристики для создания КТ для категории товара
     * С помощью данного метода можно получить список характеристик, которые можно или нужно заполнить при создании КТ для определенной категории товаров. <br> <br> `Важно`: обязательная к заполнению характеристика при создании карточки любого товара - `Предмет`. <br>Значение характеристики `Предмет` соответствует значению параметра `objectName` в запросе. <br> <br>Характеристики с  `charcType=4`, имеющие единственное значение, <b>указывать строго без массива</b>, в противном случае карточка не будет создана: <br><b>Правильно:</b>     <br>`{\"Высота упаковки\": 4}` <br><b>Не правильно:</b>     <br>`{\"Высота упаковки\": [4]}` 
     * @param {String} objectName Поиск по наименованию категории
     * @param {module:api/DefaultApi~contentV1ObjectCharacteristicsObjectNameGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1ObjectCharacteristicsObjectNameGet200Response}
     */
    contentV1ObjectCharacteristicsObjectNameGet(objectName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'objectName' is set
      if (objectName === undefined || objectName === null) {
        throw new Error("Missing the required parameter 'objectName' when calling contentV1ObjectCharacteristicsObjectNameGet");
      }

      let pathParams = {
        'objectName': objectName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContentV1ObjectCharacteristicsObjectNameGet200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/object/characteristics/{objectName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the contentV1ObjectParentAllGet operation.
     * @callback module:api/DefaultApi~contentV1ObjectParentAllGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentV1ObjectParentAllGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Родительские категории товаров
     * С помощью данного метода можно получить список всех родительских категорий товаров.
     * @param {module:api/DefaultApi~contentV1ObjectParentAllGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentV1ObjectParentAllGet200Response}
     */
    contentV1ObjectParentAllGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContentV1ObjectParentAllGet200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/content/v1/object/parent/all', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the publicApiV1InfoGet operation.
     * @callback module:api/DefaultApi~publicApiV1InfoGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PublicApiV1InfoGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Получение информации о ценах.
     * Получение информации по номенклатурам, их ценам, скидкам и промокодам. Если не указывать фильтры, вернётся весь товар.
     * @param {Object} opts Optional parameters
     * @param {module:model/Number} opts.quantity `2` - товар с нулевым остатком, `1` - товар с ненулевым остатком, `0` - товар с любым остатком
     * @param {module:api/DefaultApi~publicApiV1InfoGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PublicApiV1InfoGet200Response}
     */
    publicApiV1InfoGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'quantity': opts['quantity']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PublicApiV1InfoGet200Response;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/public/api/v1/info', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the publicApiV1PricesPost operation.
     * @callback module:api/DefaultApi~publicApiV1PricesPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Загрузка цен
     * Загрузка цен. За раз можно загрузить не более 1000 номенклатур.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/PublicApiV1PricesPostRequestInner>} opts.publicApiV1PricesPostRequestInner 
     * @param {module:api/DefaultApi~publicApiV1PricesPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    publicApiV1PricesPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['publicApiV1PricesPostRequestInner'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/public/api/v1/prices', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the publicApiV1RevokeDiscountsPost operation.
     * @callback module:api/DefaultApi~publicApiV1RevokeDiscountsPostCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Сброс скидок для номенклатур
     * Сброс скидок для номенклатур. При первом запросе ответ будет пустым. При повторной попытке сбросить скидку вернет JSON с id первичного запроса.
     * @param {Array.<Number>} requestBody Перечень номенклатур к отмене скидок
     * @param {module:api/DefaultApi~publicApiV1RevokeDiscountsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    publicApiV1RevokeDiscountsPost(requestBody, opts, callback) {
      opts = opts || {};
      let postBody = requestBody;
      // verify the required parameter 'requestBody' is set
      if (requestBody === undefined || requestBody === null) {
        throw new Error("Missing the required parameter 'requestBody' when calling publicApiV1RevokeDiscountsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['text/plain', 'application/json'];
      let returnType = 'String';
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/public/api/v1/revokeDiscounts', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the publicApiV1RevokePromocodesPost operation.
     * @callback module:api/DefaultApi~publicApiV1RevokePromocodesPostCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Сброс промокодов для номенклатур
     * Сброс промокодов для номенклатур
     * @param {Array.<Number>} requestBody Перечень номенклатур к отмене промокодов
     * @param {module:api/DefaultApi~publicApiV1RevokePromocodesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    publicApiV1RevokePromocodesPost(requestBody, opts, callback) {
      opts = opts || {};
      let postBody = requestBody;
      // verify the required parameter 'requestBody' is set
      if (requestBody === undefined || requestBody === null) {
        throw new Error("Missing the required parameter 'requestBody' when calling publicApiV1RevokePromocodesPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['text/plain'];
      let returnType = 'String';
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/public/api/v1/revokePromocodes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the publicApiV1UpdateDiscountsPost operation.
     * @callback module:api/DefaultApi~publicApiV1UpdateDiscountsPostCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Установка скидок
     * Установка скидок для номенклатур. Максимальное количество номенклатур на запрос - 1000
     * @param {Array.<module:model/PublicApiV1UpdateDiscountsPostRequestInner>} publicApiV1UpdateDiscountsPostRequestInner Перечень номенклатур
     * @param {Object} opts Optional parameters
     * @param {String} opts.activateFrom Дата активации скидки в формате `YYYY-MM-DD` или `YYYY-MM-DD HH:MM:SS`. Если не указывать, скидка начнет действовать сразу.
     * @param {module:api/DefaultApi~publicApiV1UpdateDiscountsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    publicApiV1UpdateDiscountsPost(publicApiV1UpdateDiscountsPostRequestInner, opts, callback) {
      opts = opts || {};
      let postBody = publicApiV1UpdateDiscountsPostRequestInner;
      // verify the required parameter 'publicApiV1UpdateDiscountsPostRequestInner' is set
      if (publicApiV1UpdateDiscountsPostRequestInner === undefined || publicApiV1UpdateDiscountsPostRequestInner === null) {
        throw new Error("Missing the required parameter 'publicApiV1UpdateDiscountsPostRequestInner' when calling publicApiV1UpdateDiscountsPost");
      }

      let pathParams = {
      };
      let queryParams = {
        'activateFrom': opts['activateFrom']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['text/plain'];
      let returnType = 'String';
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/public/api/v1/updateDiscounts', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the publicApiV1UpdatePromocodesPost operation.
     * @callback module:api/DefaultApi~publicApiV1UpdatePromocodesPostCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Установка промокодов для номенклатур
     * Установка промокодов для номенклатур. Максимальное количество номенклатур на запрос - 1000
     * @param {Array.<module:model/PublicApiV1UpdatePromocodesPostRequestInner>} publicApiV1UpdatePromocodesPostRequestInner Перечень номенклатур
     * @param {Object} opts Optional parameters
     * @param {String} opts.activateFrom Дата активации промокада в формате `YYYY-MM-DD` или `YYYY-MM-DD HH:MM:SS`. Если не указывать, промокод начнет действовать сразу
     * @param {module:api/DefaultApi~publicApiV1UpdatePromocodesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    publicApiV1UpdatePromocodesPost(publicApiV1UpdatePromocodesPostRequestInner, opts, callback) {
      opts = opts || {};
      let postBody = publicApiV1UpdatePromocodesPostRequestInner;
      // verify the required parameter 'publicApiV1UpdatePromocodesPostRequestInner' is set
      if (publicApiV1UpdatePromocodesPostRequestInner === undefined || publicApiV1UpdatePromocodesPostRequestInner === null) {
        throw new Error("Missing the required parameter 'publicApiV1UpdatePromocodesPostRequestInner' when calling publicApiV1UpdatePromocodesPost");
      }

      let pathParams = {
      };
      let queryParams = {
        'activateFrom': opts['activateFrom']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HeaderApiKey'];
      let contentTypes = ['application/json'];
      let accepts = ['text/plain'];
      let returnType = 'String';
      let basePaths = ['https://suppliers-api.wildberries.ru'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/public/api/v1/updatePromocodes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
